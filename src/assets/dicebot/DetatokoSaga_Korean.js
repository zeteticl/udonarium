/* Generated by Opal 1.0.3 */
(function(Opal) {
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_gt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);
  }
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  function $rb_divide(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);
  }
  function $rb_times(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;

  Opal.add_stubs(['$setPrefixes', '$debug', '$checkRoll', '$empty?', '$checkJudgeValue', '$rollTableCommand', '$=~', '$to_i', '$last_match', '$nil?', '$getRollResult', '$+', '$getSuccess', '$getCheckFlagResult', '$==', '$times', '$roll', '$[]=', '$join', '$sort', '$!=', '$reverse', '$[]', '$>=', '$>', '$getDownWill', '$getModifyText', '$getTotalResultValue', '$===', '$-', '$getTotalResultValueWhenSlash', '$ceil', '$/', '$*', '$upcase', '$choiceStrengthStigmaTable', '$choiceWillStigmaTable', '$choiceStrengthBadEndTable', '$choiceWillBadEndTable', '$get_table_by_2d6']);
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'DetatokoSaga_Korean');

    var $nesting = [self].concat($parent_nesting), $DetatokoSaga_Korean_initialize$1, $DetatokoSaga_Korean_rollDiceCommand$2, $DetatokoSaga_Korean_checkRoll$3, $DetatokoSaga_Korean_getRollResult$4, $DetatokoSaga_Korean_getSuccess$6, $DetatokoSaga_Korean_getCheckFlagResult$7, $DetatokoSaga_Korean_getDownWill$8, $DetatokoSaga_Korean_checkJudgeValue$9, $DetatokoSaga_Korean_getModifyText$10, $DetatokoSaga_Korean_getTotalResultValue$11, $DetatokoSaga_Korean_getTotalResultValueWhenSlash$12, $DetatokoSaga_Korean_rollTableCommand$13, $DetatokoSaga_Korean_choiceStrengthStigmaTable$14, $DetatokoSaga_Korean_choiceWillStigmaTable$15, $DetatokoSaga_Korean_choiceStrengthBadEndTable$16, $DetatokoSaga_Korean_choiceWillBadEndTable$17;

    
    Opal.const_set($nesting[0], 'ID', "DetatokoSaga:Korean");
    Opal.const_set($nesting[0], 'NAME', "\uB370\uD0C0\uD1A0\uCF54 \uC0AC\uAC00");
    Opal.const_set($nesting[0], 'SORT_KEY', "\u56FD\u969B\u5316:Korean:\uB370\uD0C0\uD1A0\uCF54 \uC0AC\uAC00");
    Opal.const_set($nesting[0], 'HELP_MESSAGE', "" + "\u30FB\uD1B5\uC0C1\uD310\uC815\u3000xDS or xDSy or xDS>=z or xDSy>=z\n" + "\u3000(x\uFF1D\uC2A4\uD0AC\uB808\uBCA8, y\uFF1D\uD604\uC7AC \uD50C\uB798\uADF8(\uC0DD\uB7B5=0), z\uFF1D\uBAA9\uD45C\uCE58(\uC0DD\uB7B5=\uFF18))\n" + "\u3000\uC608\uFF093DS\u30002DS5\u30000DS\u30003DS>=10\u30003DS7>=12\n" + "\u30FB\uD310\uC815\uCE58\u3000xJD or xJDy or xJDy+z or xJDy-z or xJDy/z\n" + "\u3000(x\uFF1D\uC2A4\uD0AC\uB808\uBCA8, y\uFF1D\uD604\uC7AC \uD50C\uB798\uADF8(\uC0DD\uB7B5=0), z\uFF1D\uC218\uC815\uCE58(\uC0DD\uB7B5=\uFF10))\n" + "\u3000\uC608\uFF093JD\u30002JD5\u30003JD7+1\u30004JD/3\n" + "\u30FB\uCCB4\uB825 \uB099\uC778\uD45C\u3000SST (StrengthStigmaTable)\n" + "\u30FB\uAE30\uB825 \uB099\uC778\uD45C\u3000WST (WillStigmaTable)\n" + "\u30FB\uCCB4\uB825 \uBC30\uB4DC\uC5D4\uB529\uD45C\u3000SBET (StrengthBadEndTable)\n" + "\u30FB\uAE30\uB825 \uBC30\uB4DC\uC5D4\uB529\uD45C\u3000WBET (WillBadEndTable)\n");
    self.$setPrefixes(["\\d+DS.*", "\\d+JD.*", "SST", "StrengthStigmaTable", "WST", "WillStigmaTable", "SBET", "StrengthBadEndTable", "WBET", "WillBadEndTable"]);
    
    Opal.def(self, '$initialize', $DetatokoSaga_Korean_initialize$1 = function $$initialize() {
      var $iter = $DetatokoSaga_Korean_initialize$1.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;

      if ($iter) $DetatokoSaga_Korean_initialize$1.$$p = null;
      // Prepare super implicit arguments
      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {
        $zuper[$zuper_i] = arguments[$zuper_i];
      }
      
      $send(self, Opal.find_super_dispatcher(self, 'initialize', $DetatokoSaga_Korean_initialize$1, false), $zuper, $iter);
      self.sendMode = 2;
      self.sortType = 1;
      return (self.d66Type = 2);
    }, $DetatokoSaga_Korean_initialize$1.$$arity = 0);
    
    Opal.def(self, '$rollDiceCommand', $DetatokoSaga_Korean_rollDiceCommand$2 = function $$rollDiceCommand(command) {
      var self = this, result = nil;

      
      self.$debug("rollDiceCommand begin string", command);
      result = "";
      result = self.$checkRoll(command);
      if ($truthy(result['$empty?']())) {
      } else {
        return result
      };
      result = self.$checkJudgeValue(command);
      if ($truthy(result['$empty?']())) {
      } else {
        return result
      };
      self.$debug("\uAC01\uC885\uD45C\uB85C\uC11C \uCC98\uB9AC");
      return self.$rollTableCommand(command);
    }, $DetatokoSaga_Korean_rollDiceCommand$2.$$arity = 1);
    
    Opal.def(self, '$checkRoll', $DetatokoSaga_Korean_checkRoll$3 = function $$checkRoll(string) {
      var $a, $b, self = this, target = nil, skill = nil, flag = nil, result = nil, total = nil, rollText = nil, success = nil;

      
      self.$debug("checkRoll begin string", string);
      if ($truthy(/^(\d+)DS(\d+)?((>=)(\d+))?$/i['$=~'](string))) {
      } else {
        return ""
      };
      target = 8;
      skill = $$($nesting, 'Regexp').$last_match(1).$to_i();
      flag = $$($nesting, 'Regexp').$last_match(2).$to_i();
      if ($truthy($$($nesting, 'Regexp').$last_match(5)['$nil?']())) {
      } else {
        target = $$($nesting, 'Regexp').$last_match(5).$to_i()
      };
      result = "" + "\uD310\uC815\uFF01\u3000\uC2A4\uD0AC\uB808\uBCA8\uFF1A" + (skill) + "\u3000\uD50C\uB798\uADF8\uFF1A" + (flag) + "\u3000\uBAA9\uD45C\uCE58\uFF1A" + (target);
      $b = self.$getRollResult(skill), $a = Opal.to_ary($b), (total = ($a[0] == null ? nil : $a[0])), (rollText = ($a[1] == null ? nil : $a[1])), $b;
      result = $rb_plus(result, "" + " \uFF1E " + (total) + "[" + (rollText) + "] \uFF1E \uD310\uC815\uCE58\uFF1A" + (total));
      success = self.$getSuccess(total, target);
      result = $rb_plus(result, "" + " \uFF1E " + (success));
      result = $rb_plus(result, self.$getCheckFlagResult(total, flag));
      return result;
    }, $DetatokoSaga_Korean_checkRoll$3.$$arity = 1);
    
    Opal.def(self, '$getRollResult', $DetatokoSaga_Korean_getRollResult$4 = function $$getRollResult(skill) {
      var $$5, self = this, diceCount = nil, dice = nil, diceText = nil, total = nil;

      
      diceCount = $rb_plus(skill, 1);
      if (skill['$=='](0)) {
        diceCount = 3};
      dice = [];
      $send(diceCount, 'times', [], ($$5 = function(i){var self = $$5.$$s || this, $a, $b;

      
        
        if (i == null) {
          i = nil;
        };
        return $b = self.$roll(1, 6), $a = Opal.to_ary($b), dice['$[]='](i, ($a[0] == null ? nil : $a[0])), $b;}, $$5.$$s = self, $$5.$$arity = 1, $$5));
      diceText = dice.$join(",");
      dice = dice.$sort();
      if ($truthy(skill['$!='](0))) {
        dice = dice.$reverse()};
      total = $rb_plus(dice['$[]'](0), dice['$[]'](1));
      return [total, diceText];
    }, $DetatokoSaga_Korean_getRollResult$4.$$arity = 1);
    
    Opal.def(self, '$getSuccess', $DetatokoSaga_Korean_getSuccess$6 = function $$getSuccess(check, target) {
      var self = this;

      
      if ($truthy($rb_ge(check, target))) {
        return "\uBAA9\uD45C\uCE58 \uC774\uC0C1\uFF01\u3010\uC131\uACF5\u3011"};
      return "\uBAA9\uD45C\uCE58 \uBBF8\uB2EC\u2026 \u3010\uC2E4\uD328\u3011";
    }, $DetatokoSaga_Korean_getSuccess$6.$$arity = 2);
    
    Opal.def(self, '$getCheckFlagResult', $DetatokoSaga_Korean_getCheckFlagResult$7 = function $$getCheckFlagResult(total, flag) {
      var self = this, willText = nil, result = nil;

      
      if ($truthy($rb_gt(total, flag))) {
        return ""};
      willText = self.$getDownWill(flag);
      result = "" + ", \uD50C\uB798\uADF8 \uC774\uD558\uFF01 \u3010\uAE30\uB825" + (willText) + "\uC810 \uAC10\uC18C\u3011";
      result = $rb_plus(result, " \u3010\uD310\uC815\uCE58 \uBCC0\uACBD \uBD88\uAC00\u3011");
      return result;
    }, $DetatokoSaga_Korean_getCheckFlagResult$7.$$arity = 2);
    
    Opal.def(self, '$getDownWill', $DetatokoSaga_Korean_getDownWill$8 = function $$getDownWill(flag) {
      var $a, $b, self = this, dice = nil;

      
      if ($truthy($rb_ge(flag, 10))) {
        return "6"};
      $b = self.$roll(1, 6), $a = Opal.to_ary($b), (dice = ($a[0] == null ? nil : $a[0])), $b;
      return "" + "1D6->" + (dice);
    }, $DetatokoSaga_Korean_getDownWill$8.$$arity = 1);
    
    Opal.def(self, '$checkJudgeValue', $DetatokoSaga_Korean_checkJudgeValue$9 = function $$checkJudgeValue(string) {
      var $a, $b, self = this, skill = nil, flag = nil, operator = nil, value = nil, result = nil, modifyText = nil, total = nil, rollText = nil, totalResult = nil;

      
      self.$debug("checkJudgeValue begin string", string);
      if ($truthy(/^(\d+)JD(\d+)?(([+]|[-]|[\/])(\d+))?$/i['$=~'](string))) {
      } else {
        return ""
      };
      skill = $$($nesting, 'Regexp').$last_match(1).$to_i();
      flag = $$($nesting, 'Regexp').$last_match(2).$to_i();
      operator = $$($nesting, 'Regexp').$last_match(4);
      value = $$($nesting, 'Regexp').$last_match(5).$to_i();
      result = "" + "\uD310\uC815\uFF01\u3000\uC2A4\uD0AC\uB808\uBCA8\uFF1A" + (skill) + "\u3000\uD50C\uB798\uADF8\uFF1A" + (flag);
      modifyText = self.$getModifyText(operator, value);
      if ($truthy(modifyText['$empty?']())) {
      } else {
        result = $rb_plus(result, "" + "\u3000\uC218\uC815\uCE58\uFF1A" + (modifyText))
      };
      $b = self.$getRollResult(skill), $a = Opal.to_ary($b), (total = ($a[0] == null ? nil : $a[0])), (rollText = ($a[1] == null ? nil : $a[1])), $b;
      result = $rb_plus(result, "" + " \uFF1E " + (total) + "[" + (rollText) + "]" + (modifyText));
      totalResult = self.$getTotalResultValue(total, value, operator);
      result = $rb_plus(result, "" + " \uFF1E " + (totalResult));
      result = $rb_plus(result, self.$getCheckFlagResult(total, flag));
      return result;
    }, $DetatokoSaga_Korean_checkJudgeValue$9.$$arity = 1);
    
    Opal.def(self, '$getModifyText', $DetatokoSaga_Korean_getModifyText$10 = function $$getModifyText(operator, value) {
      var self = this, operatorText = nil, $case = nil;

      
      if (value['$=='](0)) {
        return ""};
      operatorText = (function() {$case = operator;
      if ("+"['$===']($case)) {return "\uFF0B"}
      else if ("-"['$===']($case)) {return "\uFF0D"}
      else if ("/"['$===']($case)) {return "\u00F7"}
      else {return ""}})();
      return "" + (operatorText) + (value);
    }, $DetatokoSaga_Korean_getModifyText$10.$$arity = 2);
    
    Opal.def(self, '$getTotalResultValue', $DetatokoSaga_Korean_getTotalResultValue$11 = function $$getTotalResultValue(total, value, operator) {
      var self = this, $case = nil;

      return (function() {$case = operator;
      if ("+"['$===']($case)) {return "" + (total) + "+" + (value) + " \uFF1E \uD310\uC815\uCE58\uFF1A" + ($rb_plus(total, value))}
      else if ("-"['$===']($case)) {return "" + (total) + "-" + (value) + " \uFF1E \uD310\uC815\uCE58\uFF1A" + ($rb_minus(total, value))}
      else if ("/"['$===']($case)) {return self.$getTotalResultValueWhenSlash(total, value)}
      else {return "" + "\uD310\uC815\uCE58\uFF1A" + (total)}})()
    }, $DetatokoSaga_Korean_getTotalResultValue$11.$$arity = 3);
    
    Opal.def(self, '$getTotalResultValueWhenSlash', $DetatokoSaga_Korean_getTotalResultValueWhenSlash$12 = function $$getTotalResultValueWhenSlash(total, value) {
      var self = this, quotient = nil, result = nil;

      
      if (value['$=='](0)) {
        return "0\uC73C\uB85C\uB294 \uB098\uB204\uC5B4\uC9C0\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4"};
      quotient = $rb_divide($rb_times(1.0, total), value).$ceil();
      result = "" + (total) + "\u00F7" + (value) + " \uFF1E \uD310\uC815\uCE58\uFF1A" + (quotient);
      return result;
    }, $DetatokoSaga_Korean_getTotalResultValueWhenSlash$12.$$arity = 2);
    
    Opal.def(self, '$rollTableCommand', $DetatokoSaga_Korean_rollTableCommand$13 = function $$rollTableCommand(command) {
      var $a, $b, self = this, result = nil, name = nil, text = nil, total = nil, $case = nil;

      
      command = command.$upcase();
      result = [];
      self.$debug("rollDiceCommand command", command);
      name = "";
      text = "";
      total = 0;
      $case = command.$upcase();
      if ("SST"['$===']($case) || "StrengthStigmaTable".$upcase()['$===']($case)) {$b = self.$choiceStrengthStigmaTable(), $a = Opal.to_ary($b), (name = ($a[0] == null ? nil : $a[0])), (text = ($a[1] == null ? nil : $a[1])), (total = ($a[2] == null ? nil : $a[2])), $b}
      else if ("WST"['$===']($case) || "WillStigmaTable".$upcase()['$===']($case)) {$b = self.$choiceWillStigmaTable(), $a = Opal.to_ary($b), (name = ($a[0] == null ? nil : $a[0])), (text = ($a[1] == null ? nil : $a[1])), (total = ($a[2] == null ? nil : $a[2])), $b}
      else if ("SBET"['$===']($case) || "StrengthBadEndTable".$upcase()['$===']($case)) {$b = self.$choiceStrengthBadEndTable(), $a = Opal.to_ary($b), (name = ($a[0] == null ? nil : $a[0])), (text = ($a[1] == null ? nil : $a[1])), (total = ($a[2] == null ? nil : $a[2])), $b}
      else if ("WBET"['$===']($case) || "WillBadEndTable".$upcase()['$===']($case)) {$b = self.$choiceWillBadEndTable(), $a = Opal.to_ary($b), (name = ($a[0] == null ? nil : $a[0])), (text = ($a[1] == null ? nil : $a[1])), (total = ($a[2] == null ? nil : $a[2])), $b}
      else {return nil};
      result = "" + (name) + "(" + (total) + ") \uFF1E " + (text);
      return result;
    }, $DetatokoSaga_Korean_rollTableCommand$13.$$arity = 1);
    
    Opal.def(self, '$choiceStrengthStigmaTable', $DetatokoSaga_Korean_choiceStrengthStigmaTable$14 = function $$choiceStrengthStigmaTable() {
      var $a, $b, self = this, name = nil, table = nil, text = nil, total = nil;

      
      name = "\uCCB4\uB825 \uB099\uC778\uD45C";
      table = ["\uB2F9\uC2E0\uC740 \u3010\uB099\uC778\u3011\uC744 2\uAC1C \uBC1B\uB294\uB2E4. \uC774 \uD45C\uB97C \uB2E4\uC2DC 2\uBC88 \uAD74\uB824 \uBC1B\uC744 \u3010\uB099\uC778\u3011\uC744 \uC815\uD55C\uB2E4(\uADF8 \uACBD\uC6B0, \uB2E4\uC2DC \uC774 \uB208\uC774 \uB098\uC640\uB3C4 \u3010\uB099\uC778\u3011\uC740 \uB298\uC5B4\uB098\uC9C0 \uC54A\uB294\uB2E4).", "\u3010\uC0C1\uCC98\u3011 \uC2EC\uD55C \uC0C1\uCC98\uB97C \uC785\uC5C8\uB2E4. \uC5B4\uB5BB\uAC8C\uB4E0 \uC2F8\uC6B8 \uC218\uB294 \uC788\uC9C0\uB9CC\u2026\u2026.", "\u3010\uCD9C\uD608\u3011 \uD53C\uAC00 \uD758\uB7EC\uB118\uCCD0, \uB208\uC774 \uD750\uB9BF\uD558\uB2E4\u2026\u2026.", "\u3010\uC1E0\uC57D\u3011 \uBAB8\uC774 \uC57D\uD574\uC838, \uADF8 \uB9C8\uC74C\uB9C8\uC800\uB3C4 \uC2DC\uB4E4\uC5B4\uBC84\uB9B4 \uAC70 \uAC19\uB2E4.", "\u3010\uACE0\uD1B5\u3011 \uC544\uD514\uACFC \uAD34\uB85C\uC6C0, \uD55C\uC2EC\uD568. \uB208\uC5D0\uC11C \uB208\uBB3C\uC774 \uC0C8\uC5B4 \uB098\uC628\uB2E4.", "\u3010\uCDA9\uACA9\u3011 \uB0A0\uB824\uC838\uC11C, \uBCBD\uC774\uB098 \uB098\uBB34\uC5D0 \uBD80\uB52A\uD78C\uB2E4. \uBE68\uB9AC \uC77C\uC5B4\uC11C\uC9C0 \uC54A\uC73C\uBA74.", "\u3010\uD53C\uB85C\u3011 \uB2F9\uC2E0\uC758 \uC5BC\uAD74\uC5D0 \uD53C\uB85C\uC758 \uC0C9\uC774 \uAC15\uD574\uC9C4\uB2E4\u2026\u2026\uC774 \uC2F8\uC6C0\uC774 \uD798\uACA8\uC6CC\uC84C\uB2E4.", "\u3010\uB178\uD638\u3011 \uC131\uAC00\uC2E0 \uACF5\uACA9\uC5D0 \uBD84\uB178\uC758 \uD568\uC131\uC744 \uC9C0\uB978\uB2E4. \uBD84\uB178\uAC00 \uC2F8\uC6C0\uC744 \uC5B4\uB835\uAC8C \uD560\uAE4C?", "\u3010\uBD80\uC0C1\u3011 \uC0C1\uCC98\uB97C \uC785\uC5C8\uB2E4\u2026\u2026.", "\u3010\uACBD\uC0C1\u3011 \uB2F9\uC2E0\uC758 \uD53C\uBD80\uC5D0 \uC0C1\uCC98\uAC00 \uB0A8\uC558\uB2E4. \uC774\uAC83\uB9CC\uC774\uB77C\uBA74 \uC544\uBB34\uB807\uC9C0\uB3C4 \uC54A\uB2E4.", "\uAE30\uC801\uC801\uC73C\uB85C \uB2F9\uC2E0\uC740 \u3010\uB099\uC778\u3011\uC744 \uBC1B\uC9C0 \uC54A\uC558\uB2E4."];
      $b = self.$get_table_by_2d6(table), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (total = ($a[1] == null ? nil : $a[1])), $b;
      return [name, text, total];
    }, $DetatokoSaga_Korean_choiceStrengthStigmaTable$14.$$arity = 0);
    
    Opal.def(self, '$choiceWillStigmaTable', $DetatokoSaga_Korean_choiceWillStigmaTable$15 = function $$choiceWillStigmaTable() {
      var $a, $b, self = this, name = nil, table = nil, text = nil, total = nil;

      
      name = "\uAE30\uB825 \uB099\uC778\uD45C";
      table = ["\uB2F9\uC2E0\uC740 \u3010\uB099\uC778\u3011\uC744 2\uAC1C \uBC1B\uB294\uB2E4. \uC774 \uD45C\uB97C \uB2E4\uC2DC 2\uBC88 \uAD74\uB824 \uBC1B\uC744 \u3010\uB099\uC778\u3011\uC744 \uC815\uD55C\uB2E4(\uADF8 \uACBD\uC6B0, \uB2E4\uC2DC \uC774 \uB208\uC774 \uB098\uC640\uB3C4 \u3010\uB099\uC778\u3011\uC740 \uB298\uC5B4\uB098\uC9C0 \uC54A\uB294\uB2E4).", "\u3010\uC808\uB9DD\u3011 \uC5B4\uB5BB\uAC8C \uD558\uC9C0 \uBABB\uD558\uB294 \uC0C1\uD669. \uD76C\uB9DD\uC740 \uC0AC\uB77C\uC9C0\uACE0\u2026\u2026\uBB34\uB98E\uC744 \uAFC7\uC744 \uC218\uBC16\uC5D0 \uC5C6\uB2E4.", "\u3010\uD1B5\uACE1\u3011 \uB108\uBB34\uB3C4 \uBD80\uC870\uB9AC\uD568\uC5D0, \uC5B4\uB9B0\uC544\uC774\uCC98\uB7FC \uC6B8\uC74C\uC744 \uD130\uD2B8\uB9B4 \uC218\uBC16\uC5D0 \uC5C6\uB2E4.", "\u3010\uD6C4\uD68C\u3011 \uC774\uB7F4 \uC0DD\uAC01\uC740 \uC544\uB2C8\uC5C8\uB294\uB370. \uD558\uC9C0\uB9CC \uD604\uC2E4\uC740 \uBE44\uC815\uD588\uB2E4.", "\u3010\uACF5\uD3EC\u3011 \uACF5\uD3EC\uC5D0 \uC0AC\uB85C\uC7A1\uD614\uB2E4! \uC801\uC774, \uC790\uC2E0\uC758 \uC190\uC774, \uBB34\uC11C\uC6CC\uC11C \uCC38\uC744 \uC218 \uC5C6\uB2E4!", "\u3010\uAC08\uB4F1\u3011 \uC815\uB9D0\uB85C \uC774\uAC78\uB85C \uAD1C\uCC2E\uC740 \uAC78\uAE4C? \uBA87 \uBC88\uC774\uACE0 \uC790\uC2E0\uC5D0\uAC8C \uC758\uBB38\uC774 \uC77C\uC5B4\uB09C\uB2E4\u2026\u2026.", "\u3010\uC99D\uC624\u3011 \uBD84\uB178\uC640 \uC99D\uC624\uC5D0 \uC0AC\uB85C\uC7A1\uD78C \uB2F9\uC2E0\uC740, \uBCF8\uB798\uC758 \uD798\uC744 \uBC1C\uD718\uD560 \uC218 \uC788\uC744\uAE4C?", "\u3010\uB9DD\uC5F0\u3011 \uC774\uAC83\uC740 \uD604\uC2E4\uC778\uAC00? \uBABD\uB871\uD55C \uC815\uC2E0\uC73C\uB85C \uB2F9\uC2E0\uC740 \uC0DD\uAC01\uD55C\uB2E4.", "\u3010\uC8FC\uC800\u3011 \uB9DD\uC124\uC784\uC744 \uAC00\uC84C\uB2E4. \uADF8\uAC83\uC740 \uC2F8\uC6B8 \uC758\uC9C0\uB97C \uB454\uD558\uAC8C \uD560 \uAC83\uC778\uAC00?", "\u3010\uC545\uBABD\u3011 \uC774\uC81C\uBD80\uD130 \uB54C\uB54C\uB85C, \uB2F9\uC2E0\uC740 \uC774 \uC21C\uAC04\uC744 \uC545\uBABD\uC73C\uB85C \uBCFC \uAC83\uC774\uB2E4.", "\uAE30\uC801\uC801\uC73C\uB85C \uB2F9\uC2E0\uC740 \u3010\uB099\uC778\u3011\uC744 \uBC1B\uC9C0 \uC54A\uC558\uB2E4."];
      $b = self.$get_table_by_2d6(table), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (total = ($a[1] == null ? nil : $a[1])), $b;
      return [name, text, total];
    }, $DetatokoSaga_Korean_choiceWillStigmaTable$15.$$arity = 0);
    
    Opal.def(self, '$choiceStrengthBadEndTable', $DetatokoSaga_Korean_choiceStrengthBadEndTable$16 = function $$choiceStrengthBadEndTable() {
      var $a, $b, self = this, name = nil, table = nil, text = nil, total = nil;

      
      name = "\uCCB4\uB825 \uBC30\uB4DC\uC5D4\uB529\uD45C";
      table = ["\u3010\uC0AC\uB9DD\u3011 \uB2F9\uC2E0\uC740 \uC8FD\uC5C8\uB2E4. \uB2E4\uC74C \uC138\uC158\uC5D0 \uCC38\uAC00\uD558\uAE30 \uC704\uD574\uC11C\uB294, \uD074\uB798\uC2A4 1\uAC1C\uB97C \u300E\uBAAC\uC2A4\uD130\u300F\uB098 \u300E\uC554\uD751\u300F\uC73C\uB85C \uD074\uB798\uC2A4 \uCCB4\uC778\uC9C0\uD574\uC57C\uB9CC \uD55C\uB2E4.", "\u3010\uBAA9\uC228 \uAD6C\uAC78\u3011 \uB2F9\uC2E0\uC740 \uACF5\uD3EC\uB97C \uB290\uAEF4, \uBAA9\uC228\uC744 \uAD6C\uAC78\uD588\uB2E4! \uB2E4\uC74C \uC138\uC158 \uAC1C\uC2DC \uC2DC\uC5D0, \uD074\uB798\uC2A4 1\uAC1C\uAC00 \u300E\uC790\uCF54\u300F\uB85C \uBCC0\uACBD\uB41C\uB2E4!", "\u3010\uB9DD\uAC01\u3011 \uB2F9\uC2E0\uC740 \uAE30\uC5B5\uC744 \uC783\uACE0, \uC6B0\uB450\uCEE4\uB2C8 \uC130\uB2E4. \uB2E4\uC74C \uC138\uC158\uC5D0 \uCC38\uAC00\uD558\uAE30 \uC704\uD574\uC11C\uB294, \uD074\uB798\uC2A4 1\uAC1C\uB97C \uBCC0\uACBD\uD574\uC57C\uB9CC \uD55C\uB2E4.", "\u3010\uBE44\uADF9\u3011 \uB2F9\uC2E0\uC758 \uACF5\uACA9\uC740 \uC801\uC774 \uC544\uB2C8\uB77C \uC544\uAD70\uC744 \uB9DE\uCDC4\uB2E4! \uBAA8\uB4E0 \uAC83\uC774 \uB05D\uB0A0 \uB54C\uAE4C\uC9C0 \uB2F9\uC2E0\uC740 \uC6B0\uB450\uCEE4\uB2C8 \uC11C \uC788\uAC8C \uB41C\uB2E4. \uC784\uC758\uC758 \uC544\uAD70\uC758 \u3010\uCCB4\uB825\u3011\uC744 1D6\uC810 \uAC10\uC18C\uC2DC\uD0A8\uB2E4.", "\u3010\uD3ED\uC8FC\u3011 \uB2F9\uC2E0\uC740 \uC774\uC131\uC744 \uC783\uACE0, \uCDA9\uB3D9\uC5D0 \uB530\uB77C \uD3ED\uC8FC\uD55C\uB2E4! \uAC19\uC740 \uC52C\uC5D0 \uC788\uB294 \uC804\uC6D0\uC758 \u3010\uCCB4\uB825\u3011\uC744 1D6\uC810 \uAC10\uC18C\uC2DC\uD0A8\uB2E4.", "\u3010\uC804\uB77D\u3011 \uB2F9\uC2E0\uC740 \uB2E8\uC560\uC808\uBCBD\uC5D0\uC11C \uB5A8\uC5B4\uC9C4\uB2E4.", "\u3010\uD3EC\uB85C\u3011 \uB2F9\uC2E0\uC740 \uC801\uC5D0\uAC8C \uC0AC\uB85C\uC7A1\uD614\uB2E4.", "\u3010\uB3C4\uC8FC\u3011 \uB2F9\uC2E0\uC740 \uAC81\uC5D0 \uC9C8\uB824, \uB3D9\uB8CC\uB97C \uBC84\uB9AC\uACE0 \uB3C4\uB9DD\uCCE4\uB2E4.", "\u3010\uC911\uC0C1\u3011 \uB2F9\uC2E0\uC740 \uC5B4\uCC0C\uD560 \uC218 \uC5C6\uB294 \uC0C1\uCC98\uB97C \uC785\uACE0, \uC4F0\uB7EC\uC84C\uB2E4.", "\u3010\uAE30\uC808\u3011 \uB2F9\uC2E0\uC740 \uC758\uC2DD\uC744 \uC783\uC5C8\uB2E4. \uADF8\uB9AC\uACE0 \uC815\uC2E0\uC774 \uB4E4\uBA74 \uBAA8\uB4E0 \uAC83\uC774 \uB05D\uB098\uC788\uC5C8\uB2E4.", "\uADF8\uB798\uB3C4 \uC544\uC9C1 \uC77C\uC5B4\uC120\uB2E4! \uB2F9\uC2E0\uC740 \uBC30\uB4DC\uC5D4\uB4DC\uB97C \uB9DE\uC774\uD558\uC9C0 \uC54A\uC558\uB2E4. \uCCB4\uB825\uC758 \u3010\uB099\uC778\u3011\uC744 1\uAC1C \uC9C0\uC6CC\uB3C4 \uC88B\uB2E4."];
      $b = self.$get_table_by_2d6(table), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (total = ($a[1] == null ? nil : $a[1])), $b;
      return [name, text, total];
    }, $DetatokoSaga_Korean_choiceStrengthBadEndTable$16.$$arity = 0);
    return (Opal.def(self, '$choiceWillBadEndTable', $DetatokoSaga_Korean_choiceWillBadEndTable$17 = function $$choiceWillBadEndTable() {
      var $a, $b, self = this, name = nil, table = nil, text = nil, total = nil;

      
      name = "\uAE30\uB825 \uBC30\uB4DC\uC5D4\uB529\uD45C";
      table = ["\u3010\uC790\uD574\u3011 \uB2F9\uC2E0\uC740 \uC2A4\uC2A4\uB85C \uC8FD\uC74C\uC744 \uACE8\uB790\uB2E4. \uB2E4\uC74C \uC138\uC158\uC5D0 \uCC38\uAC00\uD558\uAE30 \uC704\uD574\uC11C\uB294 \uD074\uB798\uC2A4 1\uAC1C\uB97C \u300E\uC554\uD751\u300F\uC73C\uB85C \uD074\uB798\uC2A4 \uCCB4\uC778\uC9C0\uD574\uC57C\uB9CC \uD55C\uB2E4.", "\u3010\uD0C0\uB77D\u3011 \uB2F9\uC2E0\uC740 \uB9C8\uC74C\uC18D\uC758 \uC5B4\uB460\uC5D0 \uBA39\uD614\uB2E4. \uB2E4\uC74C \uC138\uC158 \uAC1C\uC2DC \uC2DC\uC5D0, \uD074\uB798\uC2A4 1\uAC1C\uAC00 \u300E\uC554\uD751\u300F\uC774\uB098 \u300E\uBAAC\uC2A4\uD130\u300F\uB85C \uBCC0\uACBD\uB41C\uB2E4!", "\u3010\uC608\uC18D\u3011 \uB2F9\uC2E0\uC740 \uC801\uC758 \uB9D0\uC5D0 \uAC70\uC2A4\uB97C \uC218 \uC5C6\uB2E4. \uB2E4\uC74C \uC138\uC158\uC5D0 \uB2F9\uC2E0\uC758 \uC2A4\uD0E0\uC2A4\uB294 \u300E\uC885\uC18D\u300F\uC774 \uB41C\uB2E4.", "\u3010\uBC30\uBC18\u3011 \uBC30\uBC18\uC758 \uCDA9\uB3D9. \uC784\uC758\uC758 \uC544\uAD70\uC758 \u3010\uCCB4\uB825\u3011\uC744 1D6\uC810 \uAC10\uC18C\uC2DC\uD0A4\uACE0, \uADF8 \uC790\uB9AC\uC5D0\uC11C \uB3C4\uB9DD\uCE5C\uB2E4.", "\u3010\uD3ED\uC8FC\u3011 \uB2F9\uC2E0\uC740 \uC774\uC131\uC744 \uC783\uACE0, \uCDA9\uB3D9\uC5D0 \uB530\uB77C \uD3ED\uC8FC\uD55C\uB2E4! \uAC19\uC740 \uC52C\uC5D0 \uC788\uB294 \uC804\uC6D0\uC758 \u3010\uCCB4\uB825\u3011\uC744 1D6\uC810 \uAC10\uC18C\uC2DC\uD0A8\uB2E4.", "\u3010\uC800\uC8FC\u3011 \uB9C8\uC74C\uC758 \uC5B4\uB460\uC774 \uD604\uC7AC\uD654\uD55C \uAC83\uC778\uAC00. \uC801\uC758 \uC6D0\uD55C\uC778\uAC00. \uC800\uC8FC\uC5D0 \uC0BC\uCF1C\uC9C4 \uB2F9\uC2E0\uC740, \uADF8\uC800 \uACE0\uD1B5\uC5D0 \uBAB8\uBD80\uB9BC\uCE60 \uC218\uBC16\uC5D0 \uC5C6\uB2E4.", "\u3010\uD3EC\uB85C\u3011 \uB2F9\uC2E0\uC740 \uC801\uC5D0\uAC8C \uC0AC\uB85C\uC7A1\uD600, \uADF8 \uC790\uB9AC\uC5D0\uC11C \uB04C\uB824\uAC14\uB2E4.", "\u3010\uB3C4\uC8FC\u3011 \uB2F9\uC2E0\uC740 \uAC81\uC5D0 \uC9C8\uB824, \uB3D9\uB8CC\uB97C \uBC84\uB9AC\uACE0 \uB3C4\uB9DD\uCCE4\uB2E4.", "\u3010\uBC29\uC2EC\u3011 \uB2F9\uC2E0\uC740 \uADF8\uC800 \uBA4D\uD558\uB2C8 \uC11C \uC788\uC744 \uC218\uBC16\uC5D0 \uC5C6\uB2E4. \uC815\uC2E0\uC744 \uCC28\uB838\uC744 \uB54C, \uBAA8\uB4E0 \uAC83\uC740 \uB05D\uB098\uC788\uC5C8\uB2E4.", "\u3010\uAE30\uC808\u3011 \uB2F9\uC2E0\uC740 \uC758\uC2DD\uC744 \uC783\uC5C8\uB2E4. \uADF8\uB9AC\uACE0 \uC815\uC2E0\uC774 \uB4E4\uBA74 \uBAA8\uB4E0 \uAC83\uC774 \uB05D\uB098\uC788\uC5C8\uB2E4.", "\uADF8\uB798\uB3C4 \uC544\uC9C1 \uD3EC\uAE30\uD558\uC9C0 \uC54A\uC544! \uB2F9\uC2E0\uC740 \uBC30\uB4DC\uC5D4\uB4DC\uB97C \uB9DE\uC774\uD558\uC9C0 \uC54A\uC558\uB2E4. \uAE30\uB825\uC758 \u3010\uB099\uC778\u3011\uC744 1\uAC1C \uC9C0\uC6CC\uB3C4 \uC88B\uB2E4."];
      $b = self.$get_table_by_2d6(table), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (total = ($a[1] == null ? nil : $a[1])), $b;
      return [name, text, total];
    }, $DetatokoSaga_Korean_choiceWillBadEndTable$17.$$arity = 0), nil) && 'choiceWillBadEndTable';
  })($nesting[0], $$($nesting, 'DiceBot'), $nesting)
})(Opal);
