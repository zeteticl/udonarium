/* Generated by Opal 1.0.3 */
(function(Opal) {
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  function $rb_times(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);
  }
  function $rb_lt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);
  }
  function $rb_gt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $hash = Opal.hash, $send = Opal.send, $range = Opal.range;

  Opal.add_stubs(['$setPrefixes', '$===', '$last_match', '$resolute_action', '$to_i', '$fetchDeathChart', '$==', '$roll_d100', '$+', '$fetchResultFromRealNameChart', '$getRealNameChartByName', '$rollHeroNameTemplateChart', '$nil?', '$[]', '$freeze', '$parren_killer', '$format', '$<=', '$-', '$roll', '$*', '$fetchFromChart', '$getDeathChartByName', '$empty?', '$min', '$keys', '$max', '$<', '$>', '$key?', '$to_s', '$find', '$include?', '$size', '$first', '$each_with_index', '$<<', '$join', '$map', '$rollHeroNameBaseChart', '$getHeroNameElementText', '$sub', '$[]=', '$=~', '$rollHeroNameElementChart']);
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'DeadlineHeroes');

    var $nesting = [self].concat($parent_nesting), $DeadlineHeroes_rollDiceCommand$1, $DeadlineHeroes_resolute_action$2, $DeadlineHeroes_roll_d100$3, $DeadlineHeroes_fetchDeathChart$4, $DeadlineHeroes_fetchFromChart$5, $DeadlineHeroes_getDeathChartByName$6, $DeadlineHeroes_fetchResultFromRealNameChart$7, $DeadlineHeroes_getRealNameChartByName$10, $DeadlineHeroes_rollHeroNameTemplateChart$11, $DeadlineHeroes_getHeroNameElementText$15, $DeadlineHeroes_rollHeroNameBaseChart$16, $DeadlineHeroes_rollHeroNameElementChart$17;

    
    Opal.const_set($nesting[0], 'ID', "DeadlineHeroes");
    Opal.const_set($nesting[0], 'NAME', "\u30C7\u30C3\u30C9\u30E9\u30A4\u30F3\u30D2\u30FC\u30ED\u30FC\u30BA");
    Opal.const_set($nesting[0], 'SORT_KEY', "\u3066\u3064\u3068\u3089\u3044\u3093\u3072\u3044\u308D\u304A\u3059");
    Opal.const_set($nesting[0], 'HELP_MESSAGE', "" + "\u30FB\u884C\u70BA\u5224\u5B9A\uFF08DLHx\uFF09\n" + "\u3000x\uFF1A\u6210\u529F\u7387\n" + "\u3000\u4F8B\uFF09DLH80\n" + "\u3000\u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\u3001\u30D5\u30A1\u30F3\u30D6\u30EB\u306E\u81EA\u52D5\u7684\u5224\u5B9A\u3092\u884C\u3044\u307E\u3059\u3002\n" + "\u3000\u300CDLH50+20-30\u300D\u306E\u3088\u3046\u306B\u52A0\u6E1B\u7B97\u8A18\u8FF0\u3082\u53EF\u80FD\u3002\n" + "\u3000\u6210\u529F\u7387\u306F\u4E0A\u9650100\uFF05\u3001\u4E0B\u9650\uFF10\uFF05\n" + "\u30FB\u30C7\u30B9\u30C1\u30E3\u30FC\u30C8(DCxY)\n" + "\u3000x\uFF1A\u30C1\u30E3\u30FC\u30C8\u306E\u7A2E\u985E\u3002\u8089\u4F53\uFF1ADCL\u3001\u7CBE\u795E\uFF1ADCS\u3001\u74B0\u5883\uFF1ADCC\n" + "\u3000Y=\u30DE\u30A4\u30CA\u30B9\u5024\n" + "\u3000\u4F8B\uFF09DCL5\uFF1A\u30E9\u30A4\u30D5\u304C -5 \u306E\u5224\u5B9A\n" + "\u3000\u3000\u3000DCS3\uFF1A\u30B5\u30CB\u30C6\u30A3\u30FC\u304C -3 \u306E\u5224\u5B9A\n" + "\u3000\u3000\u3000DCC0\uFF1A\u30AF\u30EC\u30B8\u30C3\u30C8 0 \u306E\u5224\u5B9A\n" + "\u30FB\u30D2\u30FC\u30ED\u30FC\u30CD\u30FC\u30E0\u30C1\u30E3\u30FC\u30C8\uFF08HNC\uFF09\n" + "\u30FB\u30EA\u30A2\u30EB\u30CD\u30FC\u30E0\u30C1\u30E3\u30FC\u30C8\u3000\u65E5\u672C\uFF08RNCJ\uFF09\u3001\u6D77\u5916\uFF08RNCO\uFF09\n");
    self.$setPrefixes(["DLH\\d+([\\+\\-]\\d+)*", "DC(L|S|C)\\d+", "RNC[JO]", "HNC"]);
    
    Opal.def(self, '$rollDiceCommand', $DeadlineHeroes_rollDiceCommand$1 = function $$rollDiceCommand(command) {
      var $a, $b, self = this, $case = nil, expressions = nil, type = nil, minusScore = nil, chartName = nil, roll_result = nil, dice10 = nil, dice01 = nil, text = nil, result = nil;

      
      $case = command;
      if (/^DLH(\d+([\+\-]\d+)*)/i['$===']($case)) {
      expressions = $$($nesting, 'Regexp').$last_match(1);
      return self.$resolute_action(expressions);}
      else if (/^DC(L||S|C)(\d+)/i['$===']($case)) {
      type = $$($nesting, 'Regexp').$last_match(1);
      minusScore = $$($nesting, 'Regexp').$last_match(2).$to_i();
      chartName = (function() {$case = type;
      if ("L"['$===']($case)) {return "\u8089\u4F53"}
      else if ("S"['$===']($case)) {return "\u7CBE\u795E"}
      else if ("C"['$===']($case)) {return "\u74B0\u5883"}
      else { return nil }})();
      return self.$fetchDeathChart(chartName, minusScore);}
      else if (/^RNC([JO])/i['$===']($case)) {
      type = $$($nesting, 'Regexp').$last_match(1);
      chartName = (function() {if (type['$==']("J")) {
        return "\u65E5\u672C"
      } else {
        return "\u6D77\u5916"
      }; return nil; })();
      $b = self.$roll_d100(), $a = Opal.to_ary($b), (roll_result = ($a[0] == null ? nil : $a[0])), (dice10 = ($a[1] == null ? nil : $a[1])), (dice01 = ($a[2] == null ? nil : $a[2])), $b;
      text = "" + "\u30EA\u30A2\u30EB\u30CD\u30FC\u30E0\u30C1\u30E3\u30FC\u30C8\uFF08" + (chartName) + "\uFF09";
      text = $rb_plus(text, "" + ": 1D100[" + (dice10) + "," + (dice01) + "]=" + (roll_result));
      text = $rb_plus(text, $rb_plus(" \uFF1E ", self.$fetchResultFromRealNameChart(roll_result, self.$getRealNameChartByName(chartName))));
      return text;}
      else if (/^HNC/i['$===']($case)) {
      result = self.$rollHeroNameTemplateChart();
      if ($truthy(result['$nil?']())) {
      } else {
        return "" + "\u30D2\u30FC\u30ED\u30FC\u30CD\u30FC\u30E0\u30C1\u30E3\u30FC\u30C8: 1D10[" + (result['$[]']("dice")) + "] \uFF1E " + (result['$[]']("result"))
      };};
      return nil;
    }, $DeadlineHeroes_rollDiceCommand$1.$$arity = 1);
    Opal.const_set($nesting[0], 'SUCCESS_STR', " \uFF1E \u6210\u529F");
    Opal.const_set($nesting[0], 'FAILURE_STR', " \uFF1E \u5931\u6557");
    Opal.const_set($nesting[0], 'CRITICAL_STR', $rb_plus($$($nesting, 'SUCCESS_STR'), " \uFF1E \u30AF\u30EA\u30C6\u30A3\u30AB\u30EB\uFF01 \u30D1\u30EF\u30FC\u306E\u4EE3\u511F\uFF11\uFF0F\uFF12").$freeze());
    Opal.const_set($nesting[0], 'FUMBLE_STR', $rb_plus($$($nesting, 'FAILURE_STR'), " \uFF1E \u30D5\u30A1\u30F3\u30D6\u30EB\uFF01 \u30D1\u30EF\u30FC\u306E\u4EE3\u511F\uFF12\u500D\uFF06\u632F\u308A\u76F4\u3057\u4E0D\u53EF").$freeze());
    
    Opal.def(self, '$resolute_action', $DeadlineHeroes_resolute_action$2 = function $$resolute_action(expressions) {
      var $a, $b, self = this, success_rate = nil, roll_result = nil, dice10 = nil, dice01 = nil, text = nil;

      
      success_rate = self.$parren_killer($rb_plus($rb_plus("(", expressions), ")")).$to_i();
      $b = self.$roll_d100(), $a = Opal.to_ary($b), (roll_result = ($a[0] == null ? nil : $a[0])), (dice10 = ($a[1] == null ? nil : $a[1])), (dice01 = ($a[2] == null ? nil : $a[2])), $b;
      text = "" + "\u884C\u70BA\u5224\u5B9A(\u6210\u529F\u7387:" + (success_rate) + "\uFF05)";
      text = $rb_plus(text, "" + " \uFF1E 1D100[" + (dice10) + "," + (dice01) + "]=" + (self.$format("%02d", roll_result)));
      text = $rb_plus(text, "" + " \uFF1E " + (self.$format("%02d", roll_result)));
      if ($truthy(($truthy($a = roll_result['$=='](100)) ? $a : $rb_le(success_rate, 0)))) {
        text = $rb_plus(text, $$($nesting, 'FUMBLE_STR'))
      } else if ($truthy($rb_le(roll_result, $rb_minus(success_rate, 100)))) {
        text = $rb_plus(text, $$($nesting, 'CRITICAL_STR'))
      } else if ($truthy($rb_le(roll_result, success_rate))) {
        text = $rb_plus(text, (function() {if (dice10['$=='](dice01)) {
          return $$($nesting, 'CRITICAL_STR')
        } else {
          return $$($nesting, 'SUCCESS_STR')
        }; return nil; })())
      } else {
        text = $rb_plus(text, (function() {if (dice10['$=='](dice01)) {
          return $$($nesting, 'FUMBLE_STR')
        } else {
          return $$($nesting, 'FAILURE_STR')
        }; return nil; })())
      };
      return text;
    }, $DeadlineHeroes_resolute_action$2.$$arity = 1);
    
    Opal.def(self, '$roll_d100', $DeadlineHeroes_roll_d100$3 = function $$roll_d100() {
      var $a, $b, self = this, dice10 = nil, dice01 = nil, roll_result = nil;

      
      $b = self.$roll(1, 10), $a = Opal.to_ary($b), (dice10 = ($a[0] == null ? nil : $a[0])), $b;
      if (dice10['$=='](10)) {
        dice10 = 0};
      $b = self.$roll(1, 10), $a = Opal.to_ary($b), (dice01 = ($a[0] == null ? nil : $a[0])), $b;
      if (dice01['$=='](10)) {
        dice01 = 0};
      roll_result = $rb_plus($rb_times(dice10, 10), dice01);
      if (roll_result['$=='](0)) {
        roll_result = 100};
      return [roll_result, dice10, dice01];
    }, $DeadlineHeroes_roll_d100$3.$$arity = 0);
    
    Opal.def(self, '$fetchDeathChart', $DeadlineHeroes_fetchDeathChart$4 = function $$fetchDeathChart(chartName, minusScore) {
      var $a, $b, self = this, dice = nil, keyNumber = nil, keyText = nil, resultText = nil;

      
      $b = self.$roll(1, 10), $a = Opal.to_ary($b), (dice = ($a[0] == null ? nil : $a[0])), $b;
      keyNumber = $rb_plus(dice, minusScore);
      $b = self.$fetchFromChart(keyNumber, self.$getDeathChartByName(chartName)), $a = Opal.to_ary($b), (keyText = ($a[0] == null ? nil : $a[0])), (resultText = ($a[1] == null ? nil : $a[1])), $b;
      return "" + "\u30C7\u30B9\u30C1\u30E3\u30FC\u30C8\uFF08" + (chartName) + "\uFF09[\u30DE\u30A4\u30CA\u30B9\u5024:" + (minusScore) + " + 1D10(->" + (dice) + ") = " + (keyNumber) + "] \uFF1E " + (keyText) + " \uFF1A " + (resultText);
    }, $DeadlineHeroes_fetchDeathChart$4.$$arity = 2);
    
    Opal.def(self, '$fetchFromChart', $DeadlineHeroes_fetchFromChart$5 = function $$fetchFromChart(keyNumber, chart) {
      var self = this, minKey = nil, maxKey = nil;

      
      if ($truthy(chart['$empty?']())) {
      } else {
        
        minKey = chart.$keys().$min();
        maxKey = chart.$keys().$max();
        if ($truthy($rb_lt(keyNumber, minKey))) {
          return ["" + (minKey) + "\u4EE5\u4E0B", chart['$[]'](minKey)]};
        if ($truthy($rb_gt(keyNumber, maxKey))) {
          return ["" + (maxKey) + "\u4EE5\u4E0A", chart['$[]'](maxKey)]};
        if ($truthy(chart['$key?'](keyNumber))) {
          return [keyNumber.$to_s(), chart['$[]'](keyNumber)]};
      };
      return ["\u672A\u5B9A\u7FA9", "\uFF1F\uFF1F\uFF1F"];
    }, $DeadlineHeroes_fetchFromChart$5.$$arity = 2);
    
    Opal.def(self, '$getDeathChartByName', $DeadlineHeroes_getDeathChartByName$6 = function $$getDeathChartByName(chartName) {
      var self = this;

      
      if ($truthy($$($nesting, 'DEATH_CHARTS')['$key?'](chartName))) {
      } else {
        return $hash2([], {})
      };
<<<<<<< HEAD
      return (($a = $DeadlineHeroes.$$cvars['@@deathCharts']) == null ? nil : $a)['$[]'](chartName);
    }, TMP_DeadlineHeroes_getDeathChartByName_9.$$arity = 1);
    (Opal.class_variable_set($DeadlineHeroes, '@@deathCharts', $hash2(["肉体", "精神", "環境"], {"肉体": $hash(10, "何も無し。キミは奇跡的に一命を取り留めた。闘いは続く。", 11, "激痛が走る。以後、イベント終了時まで、全ての判定の成功率－10％。", 12, "キミは［硬直］ポイント２点を得る。［硬直］ポイントを所持している間、キミは「属性：妨害」のパワーを使用することができない。各ラウンド終了時、キミは所持している［硬直］ポイントを１点減らしてもよい。", 13, "渾身の一撃!!　キミは〈生存〉判定を行なう。失敗した場合、［死亡］する。", 14, "キミは［気絶］ポイント２点を得る。［気絶］ポイントを所持している間、キミはあらゆるパワーを使用できず、自身のターンを得ることもできない。各ラウンド終了時、キミは所持している［気絶］ポイントを１点減らしてもよい。", 15, "以後、イベント終了時まで、全ての判定の成功率－20％。", 16, "記録的一撃!!　キミは〈生存〉－20％の判定を行なう。失敗した場合、［死亡］する。", 17, "キミは［瀕死］ポイント２点を得る。［瀕死］ポイントを所持している間、キミはあらゆるパワーを使用できず、自身のターンを得ることもできない。各ラウンド終了時、キミは所持している［瀕死］ポイントを１点を失う。全ての［瀕死］ポイントを失う前に戦闘が終了しなかった場合、キミは［死亡］する。", 18, "叙事詩的一撃!!　キミは〈生存〉－30％の判定を行なう。失敗した場合、［死亡］する。", 19, "以後、イベント終了時まで、全ての判定の成功率－30％。", 20, "神話的一撃!!　キミは宙を舞って三回転ほどした後、地面に叩きつけられる。見るも無惨な姿。肉体は原型を留めていない（キミは［死亡］した）。"), "精神": $hash(10, "何も無し。キミは歯を食いしばってストレスに耐えた。", 11, "以後、イベント終了時まで、全ての判定の成功率－10％。", 12, "キミは［恐怖］ポイント２点を得る。［恐怖］ポイントを所持している間、キミは「属性：攻撃」のパワーを使用できない。各ラウンド終了時、キミは所持している［恐怖］ポイントを１点減らしてもよい。", 13, "とても傷ついた。キミは〈意志〉判定を行なう。失敗した場合、［絶望］してＮＰＣとなる。", 14, "キミは［気絶］ポイント２点を得る。［気絶］ポイントを所持している間、キミはあらゆるパワーを使用できず、自身のターンを得ることもできない。各ラウンド終了時、キミは所持している［気絶］ポイントを１点減らしてもよい。", 15, "以後、イベント終了時まで、全ての判定の成功率－20％。", 16, "信じるものに裏切られたような痛み。キミは〈意志〉－20％の判定を行なう。失敗した場合、［絶望］してＮＰＣとなる。", 17, "キミは［混乱］ポイント２点を得る。［混乱］ポイントを所持している間、キミは本来味方であった角色に対して、可能な限り最大の被害を与える様、行動し続ける。各ラウンド終了時、キミは所持している［混乱］ポイントを１点減らしてもよい。", 18, "あまりに残酷な現実。キミは〈意志〉－30％の判定を行なう。失敗した場合、［絶望］してＮＰＣとなる。", 19, "以後、イベント終了時まで、全ての判定の成功率－30％。", 20, "宇宙開闢の理に触れるも、それは人類の認識限界を超える何かであった。キミは［絶望］し、以後ＮＰＣとなる。"), "環境": $hash(10, "何も無し。キミは黒い噂を握りつぶした。", 11, "以後、イベント終了時まで、全ての判定の成功率－10％。", 12, "ピンチ！　以後、イベント終了時まで、キミは《支援》を使用できない。", 13, "裏切り!!　キミは〈経済〉判定を行なう。失敗した場合、キミはヒーローとしての名声を失い、［汚名］を受ける。", 14, "以後、シナリオ終了時まで、代償にクレジットを消費するパワーを使用できない。", 15, "キミの悪評は大変なもののようだ。協力者からの支援が打ち切られる。以後、シナリオ終了時まで、全ての判定の成功率－20％。", 16, "信頼の失墜!!　キミは〈経済〉－20％の判定を行なう。失敗した場合、キミはヒーローとしての名声を失い、［汚名］を受ける。", 17, "以後、シナリオ終了時まで、【環境】系の技能のレベルがすべて０となる。", 18, "捏造報道!!　身の覚えのない犯罪への荷担が、スクープとして報道される。キミは〈経済〉－30％の判定を行なう。失敗した場合、キミはヒーローとしての名声を失い、［汚名］を受ける。", 19, "以後、イベント終了時まで、全ての判定の成功率－30％。", 20, "キミの名は史上最悪の汚点として永遠に歴史に刻まれる。もはやキミを信じる仲間はなく、キミを助ける社会もない。キミは［汚名］を受けた。")})));
=======
      return $$($nesting, 'DEATH_CHARTS')['$[]'](chartName);
    }, $DeadlineHeroes_getDeathChartByName$6.$$arity = 1);
    Opal.const_set($nesting[0], 'DEATH_CHARTS', $hash2(["\u8089\u4F53", "\u7CBE\u795E", "\u74B0\u5883"], {"\u8089\u4F53": $hash(10, "\u4F55\u3082\u7121\u3057\u3002\u30AD\u30DF\u306F\u5947\u8DE1\u7684\u306B\u4E00\u547D\u3092\u53D6\u308A\u7559\u3081\u305F\u3002\u95D8\u3044\u306F\u7D9A\u304F\u3002", 11, "\u6FC0\u75DB\u304C\u8D70\u308B\u3002\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D10\uFF05\u3002", 12, "\u30AD\u30DF\u306F\uFF3B\u786C\u76F4\uFF3D\u30DD\u30A4\u30F3\u30C8\uFF12\u70B9\u3092\u5F97\u308B\u3002\uFF3B\u786C\u76F4\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\u6240\u6301\u3057\u3066\u3044\u308B\u9593\u3001\u30AD\u30DF\u306F\u300C\u5C5E\u6027\uFF1A\u59A8\u5BB3\u300D\u306E\u30D1\u30EF\u30FC\u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u306A\u3044\u3002\u5404\u30E9\u30A6\u30F3\u30C9\u7D42\u4E86\u6642\u3001\u30AD\u30DF\u306F\u6240\u6301\u3057\u3066\u3044\u308B\uFF3B\u786C\u76F4\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\uFF11\u70B9\u6E1B\u3089\u3057\u3066\u3082\u3088\u3044\u3002", 13, "\u6E3E\u8EAB\u306E\u4E00\u6483!!\u3000\u30AD\u30DF\u306F\u3008\u751F\u5B58\u3009\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\uFF3B\u6B7B\u4EA1\uFF3D\u3059\u308B\u3002", 14, "\u30AD\u30DF\u306F\uFF3B\u6C17\u7D76\uFF3D\u30DD\u30A4\u30F3\u30C8\uFF12\u70B9\u3092\u5F97\u308B\u3002\uFF3B\u6C17\u7D76\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\u6240\u6301\u3057\u3066\u3044\u308B\u9593\u3001\u30AD\u30DF\u306F\u3042\u3089\u3086\u308B\u30D1\u30EF\u30FC\u3092\u4F7F\u7528\u3067\u304D\u305A\u3001\u81EA\u8EAB\u306E\u30BF\u30FC\u30F3\u3092\u5F97\u308B\u3053\u3068\u3082\u3067\u304D\u306A\u3044\u3002\u5404\u30E9\u30A6\u30F3\u30C9\u7D42\u4E86\u6642\u3001\u30AD\u30DF\u306F\u6240\u6301\u3057\u3066\u3044\u308B\uFF3B\u6C17\u7D76\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\uFF11\u70B9\u6E1B\u3089\u3057\u3066\u3082\u3088\u3044\u3002", 15, "\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D20\uFF05\u3002", 16, "\u8A18\u9332\u7684\u4E00\u6483!!\u3000\u30AD\u30DF\u306F\u3008\u751F\u5B58\u3009\uFF0D20\uFF05\u306E\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\uFF3B\u6B7B\u4EA1\uFF3D\u3059\u308B\u3002", 17, "\u30AD\u30DF\u306F\uFF3B\u7015\u6B7B\uFF3D\u30DD\u30A4\u30F3\u30C8\uFF12\u70B9\u3092\u5F97\u308B\u3002\uFF3B\u7015\u6B7B\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\u6240\u6301\u3057\u3066\u3044\u308B\u9593\u3001\u30AD\u30DF\u306F\u3042\u3089\u3086\u308B\u30D1\u30EF\u30FC\u3092\u4F7F\u7528\u3067\u304D\u305A\u3001\u81EA\u8EAB\u306E\u30BF\u30FC\u30F3\u3092\u5F97\u308B\u3053\u3068\u3082\u3067\u304D\u306A\u3044\u3002\u5404\u30E9\u30A6\u30F3\u30C9\u7D42\u4E86\u6642\u3001\u30AD\u30DF\u306F\u6240\u6301\u3057\u3066\u3044\u308B\uFF3B\u7015\u6B7B\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\uFF11\u70B9\u3092\u5931\u3046\u3002\u5168\u3066\u306E\uFF3B\u7015\u6B7B\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\u5931\u3046\u524D\u306B\u6226\u95D8\u304C\u7D42\u4E86\u3057\u306A\u304B\u3063\u305F\u5834\u5408\u3001\u30AD\u30DF\u306F\uFF3B\u6B7B\u4EA1\uFF3D\u3059\u308B\u3002", 18, "\u53D9\u4E8B\u8A69\u7684\u4E00\u6483!!\u3000\u30AD\u30DF\u306F\u3008\u751F\u5B58\u3009\uFF0D30\uFF05\u306E\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\uFF3B\u6B7B\u4EA1\uFF3D\u3059\u308B\u3002", 19, "\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D30\uFF05\u3002", 20, "\u795E\u8A71\u7684\u4E00\u6483!!\u3000\u30AD\u30DF\u306F\u5B99\u3092\u821E\u3063\u3066\u4E09\u56DE\u8EE2\u307B\u3069\u3057\u305F\u5F8C\u3001\u5730\u9762\u306B\u53E9\u304D\u3064\u3051\u3089\u308C\u308B\u3002\u898B\u308B\u3082\u7121\u60E8\u306A\u59FF\u3002\u8089\u4F53\u306F\u539F\u578B\u3092\u7559\u3081\u3066\u3044\u306A\u3044\uFF08\u30AD\u30DF\u306F\uFF3B\u6B7B\u4EA1\uFF3D\u3057\u305F\uFF09\u3002"), "\u7CBE\u795E": $hash(10, "\u4F55\u3082\u7121\u3057\u3002\u30AD\u30DF\u306F\u6B6F\u3092\u98DF\u3044\u3057\u3070\u3063\u3066\u30B9\u30C8\u30EC\u30B9\u306B\u8010\u3048\u305F\u3002", 11, "\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D10\uFF05\u3002", 12, "\u30AD\u30DF\u306F\uFF3B\u6050\u6016\uFF3D\u30DD\u30A4\u30F3\u30C8\uFF12\u70B9\u3092\u5F97\u308B\u3002\uFF3B\u6050\u6016\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\u6240\u6301\u3057\u3066\u3044\u308B\u9593\u3001\u30AD\u30DF\u306F\u300C\u5C5E\u6027\uFF1A\u653B\u6483\u300D\u306E\u30D1\u30EF\u30FC\u3092\u4F7F\u7528\u3067\u304D\u306A\u3044\u3002\u5404\u30E9\u30A6\u30F3\u30C9\u7D42\u4E86\u6642\u3001\u30AD\u30DF\u306F\u6240\u6301\u3057\u3066\u3044\u308B\uFF3B\u6050\u6016\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\uFF11\u70B9\u6E1B\u3089\u3057\u3066\u3082\u3088\u3044\u3002", 13, "\u3068\u3066\u3082\u50B7\u3064\u3044\u305F\u3002\u30AD\u30DF\u306F\u3008\u610F\u5FD7\u3009\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\uFF3B\u7D76\u671B\uFF3D\u3057\u3066\uFF2E\uFF30\uFF23\u3068\u306A\u308B\u3002", 14, "\u30AD\u30DF\u306F\uFF3B\u6C17\u7D76\uFF3D\u30DD\u30A4\u30F3\u30C8\uFF12\u70B9\u3092\u5F97\u308B\u3002\uFF3B\u6C17\u7D76\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\u6240\u6301\u3057\u3066\u3044\u308B\u9593\u3001\u30AD\u30DF\u306F\u3042\u3089\u3086\u308B\u30D1\u30EF\u30FC\u3092\u4F7F\u7528\u3067\u304D\u305A\u3001\u81EA\u8EAB\u306E\u30BF\u30FC\u30F3\u3092\u5F97\u308B\u3053\u3068\u3082\u3067\u304D\u306A\u3044\u3002\u5404\u30E9\u30A6\u30F3\u30C9\u7D42\u4E86\u6642\u3001\u30AD\u30DF\u306F\u6240\u6301\u3057\u3066\u3044\u308B\uFF3B\u6C17\u7D76\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\uFF11\u70B9\u6E1B\u3089\u3057\u3066\u3082\u3088\u3044\u3002", 15, "\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D20\uFF05\u3002", 16, "\u4FE1\u3058\u308B\u3082\u306E\u306B\u88CF\u5207\u3089\u308C\u305F\u3088\u3046\u306A\u75DB\u307F\u3002\u30AD\u30DF\u306F\u3008\u610F\u5FD7\u3009\uFF0D20\uFF05\u306E\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\uFF3B\u7D76\u671B\uFF3D\u3057\u3066\uFF2E\uFF30\uFF23\u3068\u306A\u308B\u3002", 17, "\u30AD\u30DF\u306F\uFF3B\u6DF7\u4E71\uFF3D\u30DD\u30A4\u30F3\u30C8\uFF12\u70B9\u3092\u5F97\u308B\u3002\uFF3B\u6DF7\u4E71\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\u6240\u6301\u3057\u3066\u3044\u308B\u9593\u3001\u30AD\u30DF\u306F\u672C\u6765\u5473\u65B9\u3067\u3042\u3063\u305F\u30AD\u30E3\u30E9\u30AF\u30BF\u30FC\u306B\u5BFE\u3057\u3066\u3001\u53EF\u80FD\u306A\u9650\u308A\u6700\u5927\u306E\u88AB\u5BB3\u3092\u4E0E\u3048\u308B\u69D8\u3001\u884C\u52D5\u3057\u7D9A\u3051\u308B\u3002\u5404\u30E9\u30A6\u30F3\u30C9\u7D42\u4E86\u6642\u3001\u30AD\u30DF\u306F\u6240\u6301\u3057\u3066\u3044\u308B\uFF3B\u6DF7\u4E71\uFF3D\u30DD\u30A4\u30F3\u30C8\u3092\uFF11\u70B9\u6E1B\u3089\u3057\u3066\u3082\u3088\u3044\u3002", 18, "\u3042\u307E\u308A\u306B\u6B8B\u9177\u306A\u73FE\u5B9F\u3002\u30AD\u30DF\u306F\u3008\u610F\u5FD7\u3009\uFF0D30\uFF05\u306E\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\uFF3B\u7D76\u671B\uFF3D\u3057\u3066\uFF2E\uFF30\uFF23\u3068\u306A\u308B\u3002", 19, "\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D30\uFF05\u3002", 20, "\u5B87\u5B99\u958B\u95E2\u306E\u7406\u306B\u89E6\u308C\u308B\u3082\u3001\u305D\u308C\u306F\u4EBA\u985E\u306E\u8A8D\u8B58\u9650\u754C\u3092\u8D85\u3048\u308B\u4F55\u304B\u3067\u3042\u3063\u305F\u3002\u30AD\u30DF\u306F\uFF3B\u7D76\u671B\uFF3D\u3057\u3001\u4EE5\u5F8C\uFF2E\uFF30\uFF23\u3068\u306A\u308B\u3002"), "\u74B0\u5883": $hash(10, "\u4F55\u3082\u7121\u3057\u3002\u30AD\u30DF\u306F\u9ED2\u3044\u5642\u3092\u63E1\u308A\u3064\u3076\u3057\u305F\u3002", 11, "\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D10\uFF05\u3002", 12, "\u30D4\u30F3\u30C1\uFF01\u3000\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u30AD\u30DF\u306F\u300A\u652F\u63F4\u300B\u3092\u4F7F\u7528\u3067\u304D\u306A\u3044\u3002", 13, "\u88CF\u5207\u308A!!\u3000\u30AD\u30DF\u306F\u3008\u7D4C\u6E08\u3009\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\u30AD\u30DF\u306F\u30D2\u30FC\u30ED\u30FC\u3068\u3057\u3066\u306E\u540D\u58F0\u3092\u5931\u3044\u3001\uFF3B\u6C5A\u540D\uFF3D\u3092\u53D7\u3051\u308B\u3002", 14, "\u4EE5\u5F8C\u3001\u30B7\u30CA\u30EA\u30AA\u7D42\u4E86\u6642\u307E\u3067\u3001\u4EE3\u511F\u306B\u30AF\u30EC\u30B8\u30C3\u30C8\u3092\u6D88\u8CBB\u3059\u308B\u30D1\u30EF\u30FC\u3092\u4F7F\u7528\u3067\u304D\u306A\u3044\u3002", 15, "\u30AD\u30DF\u306E\u60AA\u8A55\u306F\u5927\u5909\u306A\u3082\u306E\u306E\u3088\u3046\u3060\u3002\u5354\u529B\u8005\u304B\u3089\u306E\u652F\u63F4\u304C\u6253\u3061\u5207\u3089\u308C\u308B\u3002\u4EE5\u5F8C\u3001\u30B7\u30CA\u30EA\u30AA\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D20\uFF05\u3002", 16, "\u4FE1\u983C\u306E\u5931\u589C!!\u3000\u30AD\u30DF\u306F\u3008\u7D4C\u6E08\u3009\uFF0D20\uFF05\u306E\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\u30AD\u30DF\u306F\u30D2\u30FC\u30ED\u30FC\u3068\u3057\u3066\u306E\u540D\u58F0\u3092\u5931\u3044\u3001\uFF3B\u6C5A\u540D\uFF3D\u3092\u53D7\u3051\u308B\u3002", 17, "\u4EE5\u5F8C\u3001\u30B7\u30CA\u30EA\u30AA\u7D42\u4E86\u6642\u307E\u3067\u3001\u3010\u74B0\u5883\u3011\u7CFB\u306E\u6280\u80FD\u306E\u30EC\u30D9\u30EB\u304C\u3059\u3079\u3066\uFF10\u3068\u306A\u308B\u3002", 18, "\u634F\u9020\u5831\u9053!!\u3000\u8EAB\u306E\u899A\u3048\u306E\u306A\u3044\u72AF\u7F6A\u3078\u306E\u8377\u62C5\u304C\u3001\u30B9\u30AF\u30FC\u30D7\u3068\u3057\u3066\u5831\u9053\u3055\u308C\u308B\u3002\u30AD\u30DF\u306F\u3008\u7D4C\u6E08\u3009\uFF0D30\uFF05\u306E\u5224\u5B9A\u3092\u884C\u306A\u3046\u3002\u5931\u6557\u3057\u305F\u5834\u5408\u3001\u30AD\u30DF\u306F\u30D2\u30FC\u30ED\u30FC\u3068\u3057\u3066\u306E\u540D\u58F0\u3092\u5931\u3044\u3001\uFF3B\u6C5A\u540D\uFF3D\u3092\u53D7\u3051\u308B\u3002", 19, "\u4EE5\u5F8C\u3001\u30A4\u30D9\u30F3\u30C8\u7D42\u4E86\u6642\u307E\u3067\u3001\u5168\u3066\u306E\u5224\u5B9A\u306E\u6210\u529F\u7387\uFF0D30\uFF05\u3002", 20, "\u30AD\u30DF\u306E\u540D\u306F\u53F2\u4E0A\u6700\u60AA\u306E\u6C5A\u70B9\u3068\u3057\u3066\u6C38\u9060\u306B\u6B74\u53F2\u306B\u523B\u307E\u308C\u308B\u3002\u3082\u306F\u3084\u30AD\u30DF\u3092\u4FE1\u3058\u308B\u4EF2\u9593\u306F\u306A\u304F\u3001\u30AD\u30DF\u3092\u52A9\u3051\u308B\u793E\u4F1A\u3082\u306A\u3044\u3002\u30AD\u30DF\u306F\uFF3B\u6C5A\u540D\uFF3D\u3092\u53D7\u3051\u305F\u3002")}).$freeze());
>>>>>>> 0dfe93a1d368ac1ad3ef24167156b31a70848848
    
    Opal.def(self, '$fetchResultFromRealNameChart', $DeadlineHeroes_fetchResultFromRealNameChart$7 = function $$fetchResultFromRealNameChart(keyNumber, chartInfo) {
      var $a, $b, $$8, $$9, self = this, columns = nil, chart = nil, range = nil, elements = nil, result = nil, nameTextList = nil;

      
      $b = chartInfo, $a = Opal.to_ary($b), (columns = ($a[0] == null ? nil : $a[0])), (chart = ($a[1] == null ? nil : $a[1])), $b;
      $b = $send(chart, 'find', [], ($$8 = function(range, _elements){var self = $$8.$$s || this;

      
        
        if (range == null) {
          range = nil;
        };
        
        if (_elements == null) {
          _elements = nil;
        };
        return range['$include?'](keyNumber);}, $$8.$$s = self, $$8.$$arity = 2, $$8)), $a = Opal.to_ary($b), (range = ($a[0] == null ? nil : $a[0])), (elements = ($a[1] == null ? nil : $a[1])), $b;
      if ($truthy(range['$nil?']())) {
        return nil};
      result = "" + "(" + (range) + ") \uFF1E ";
      if ($truthy($rb_le(elements.$size(), 1))) {
        
        result = $rb_plus(result, elements.$first());
        return result;};
      nameTextList = [];
      $send(columns, 'each_with_index', [], ($$9 = function(title, i){var self = $$9.$$s || this, text = nil;

      
        
        if (title == null) {
          title = nil;
        };
        
        if (i == null) {
          i = nil;
        };
        text = elements['$[]'](i);
        if ($truthy(text['$nil?']())) {
          return nil;};
        return nameTextList['$<<']("" + (title) + ": " + (text));}, $$9.$$s = self, $$9.$$arity = 2, $$9));
      result = $rb_plus(result, nameTextList.$join("\n"));
      return result;
    }, $DeadlineHeroes_fetchResultFromRealNameChart$7.$$arity = 2);
    
    Opal.def(self, '$getRealNameChartByName', $DeadlineHeroes_getRealNameChartByName$10 = function $$getRealNameChartByName(chartName) {
      var self = this;

      
      if ($truthy($$($nesting, 'REAL_NAME_CHARTS')['$key?'](chartName))) {
      } else {
        return $hash2([], {})
      };
      return $$($nesting, 'REAL_NAME_CHARTS')['$[]'](chartName);
    }, $DeadlineHeroes_getRealNameChartByName$10.$$arity = 1);
    Opal.const_set($nesting[0], 'REAL_NAME_CHARTS', $hash2(["\u65E5\u672C", "\u6D77\u5916"], {"\u65E5\u672C": [["\u59D3", "\u540D\uFF08\u7537\uFF09", "\u540D\uFF08\u5973\uFF09"], [[$range(1, 6, false), ["\u30A2\u30A4\u30AB\u30EF\uFF0F\u76F8\u5DDD\u3001\u611B\u5DDD", "\u30A2\u30AD\u30E9\uFF0F\u6676\u3001\u7AE0", "\u30A2\u30F3\uFF0F\u674F"]], [$range(7, 12, false), ["\u30A2\u30DE\u30DF\u30E4\uFF0F\u96E8\u5BAE", "\u30A8\u30A4\u30B8\uFF0F\u6620\u53F8\u3001\u82F1\u6CBB", "\u30A4\u30CE\u30EA\uFF0F\u7948\u9234\u3001\u7948"]], [$range(13, 18, false), ["\u30A4\u30D6\u30AD\uFF0F\u4F0A\u5439", "\u30AB\u30BA\u30AD\uFF0F\u548C\u5E0C\u3001\u4E00\u8F1D", "\u30A8\u30DE\uFF0F\u82F1\u771F\u3001\u6075\u8309"]], [$range(19, 24, false), ["\u30AA\u30AC\u30DF\uFF0F\u5C3E\u4E0A", "\u30AE\u30F3\u30AC\uFF0F\u9280\u6CB3", "\u30AB\u30CE\u30F3\uFF0F\u82B1\u97F3\u3001\u89B3\u97F3"]], [$range(25, 30, false), ["\u30AB\u30A4\uFF0F\u7532\u6590", "\u30B1\u30F3\u30A4\u30C1\u30ED\u30A6\uFF0F\u5065\u4E00\u90CE", "\u30B5\u30E9\uFF0F\u6C99\u7F85"]], [$range(31, 36, false), ["\u30B5\u30AB\u30AD\uFF0F\u698A\u3001\u962A\u6728", "\u30B4\u30A6\uFF0F\u8C6A\u3001\u525B", "\u30B7\u30BA\u30AF\uFF0F\u96EB"]], [$range(37, 42, false), ["\u30B7\u30B7\u30C9\uFF0F\u5B8D\u6238", "\u30B8\u30ED\u30FC\uFF0F\u6B21\u90CE\u3001\u6CBB\u90CE", "\u30C1\u30BA\u30EB\uFF0F\u5343\u9DB4\u3001\u5343\u5C0B"]], [$range(43, 48, false), ["\u30BF\u30C1\u30D0\u30CA\uFF0F\u6A58\u3001\u7ACB\u82B1", "\u30BF\u30B1\u30B7\uFF0F\u731B\u3001\u6B66", "\u30CA\u30AA\u30DF\uFF0F\u76F4\u7F8E\u3001\u5C1A\u7F8E"]], [$range(49, 54, false), ["\u30C4\u30D6\u30E9\u30E4\uFF0F\u5186\u8C37", "\u30C4\u30D0\u30B5\uFF0F\u7FFC", "\u30CF\u30EB\uFF0F\u83EF\u3001\u6CE2\u7559"]], [$range(55, 60, false), ["\u30CF\u30E4\u30AB\u30EF\uFF0F\u65E9\u5DDD", "\u30C6\u30C4\uFF0F\u9244\u3001\u54F2", "\u30D2\u30AB\u30EB\uFF0F\u5149"]], [$range(61, 66, false), ["\u30CF\u30E9\u30C0\uFF0F\u539F\u7530", "\u30D2\u30C7\u30AA\uFF0F\u82F1\u96C4", "\u30D9\u30CB\uFF0F\u7D05"]], [$range(67, 72, false), ["\u30D5\u30B8\u30AB\u30EF\uFF0F\u85E4\u5DDD", "\u30DE\u30B5\u30E0\u30CD\uFF0F\u6B63\u5B97\u3001\u653F\u5B97", "\u30DE\u30C1\uFF0F\u771F\u77E5\u3001\u753A"]], [$range(73, 78, false), ["\u30DB\u30B7\uFF0F\u661F", "\u30E4\u30DE\u30C8\uFF0F\u5927\u548C", "\u30DF\u30A2\uFF0F\u6DF1\u7A7A\u3001\u7F8E\u674F"]], [$range(79, 84, false), ["\u30DF\u30BE\u30B0\u30C1\uFF0F\u6E9D\u53E3", "\u30EA\u30E5\u30A6\u30BB\u30A4\uFF0F\u6D41\u661F", "\u30E6\u30EA\u30B3\uFF0F\u7531\u91CC\u5B50"]], [$range(85, 90, false), ["\u30E4\u30B7\u30C0\uFF0F\u77E2\u5FD7\u7530", "\u30EC\u30C4\uFF0F\u70C8\u3001\u88C2", "\u30EB\u30A4\uFF0F\u7460\u8863\u3001\u6D99"]], [$range(91, 96, false), ["\u30E6\u30A6\u30AD\uFF0F\u7D50\u57CE", "\u30EC\u30F3\uFF0F\u9023\u3001\u932C", "\u30EC\u30CA\uFF0F\u73B2\u5948"]], [$range(97, 100, false), ["\u540D\u7121\u3057\uFF08\u4F55\u3089\u304B\u306E\u7406\u7531\u3067\u540D\u524D\u3092\u6301\u305F\u306A\u3044\u3001\u3082\u3057\u304F\u306F\u5931\u3063\u305F\uFF09"]]]], "\u6D77\u5916": [["\u540D\uFF08\u7537\uFF09", "\u540D\uFF08\u5973\uFF09", "\u59D3"], [[$range(1, 6, false), ["\u30A2\u30EB\u30D0\u30B9", "\u30A2\u30A4\u30EA\u30B9", "\u30A2\u30EC\u30F3"]], [$range(7, 12, false), ["\u30AF\u30EA\u30B9", "\u30AA\u30EA\u30FC\u30D6", "\u30A6\u30A9\u30FC\u30B1\u30F3"]], [$range(13, 18, false), ["\u30B5\u30DF\u30E5\u30A8\u30EB", "\u30AB\u30FC\u30E9", "\u30A6\u30EB\u30D5\u30DE\u30F3"]], [$range(19, 24, false), ["\u30B7\u30C9\u30CB\u30FC", "\u30AD\u30EB\u30B9\u30C6\u30A3\u30F3", "\u30AA\u30EB\u30BB\u30F3"]], [$range(25, 30, false), ["\u30B9\u30D1\u30A4\u30AF", "\u30B0\u30A6\u30A7\u30F3", "\u30AB\u30FC\u30BF\u30FC"]], [$range(31, 36, false), ["\u30C0\u30DF\u30A2\u30F3", "\u30B5\u30DE\u30F3\u30B5", "\u30AD\u30E3\u30E9\u30C0\u30A4\u30F3"]], [$range(37, 42, false), ["\u30C7\u30A3\u30C3\u30AF", "\u30B8\u30E3\u30B9\u30C6\u30A3\u30CA", "\u30B7\u30FC\u30B2\u30EB"]], [$range(43, 48, false), ["\u30C7\u30F3\u30BC\u30EB", "\u30BF\u30D0\u30B5", "\u30B8\u30E7\u30FC\u30F3\u30BA"]], [$range(49, 54, false), ["\u30C9\u30F3", "\u30CA\u30C7\u30A3\u30F3", "\u30D1\u30FC\u30AB\u30FC"]], [$range(55, 60, false), ["\u30CB\u30B3\u30E9\u30B9", "\u30CE\u30A8\u30EB", "\u30D5\u30EA\u30FC\u30DE\u30F3"]], [$range(61, 66, false), ["\u30CD\u30D3\u30EB", "\u30CF\u30FC\u30EA\u30FC\u30F3", "\u30DE\u30FC\u30D5\u30A3\u30FC"]], [$range(67, 72, false), ["\u30D0\u30EA", "\u30DE\u30EB\u30BB\u30E9", "\u30DF\u30E9\u30FC"]], [$range(73, 78, false), ["\u30D3\u30EA\u30FC", "\u30E9\u30CA", "\u30E0\u30FC\u30A2"]], [$range(79, 84, false), ["\u30D6\u30EB\u30FC\u30B9", "\u30EA\u30F3\u30B8\u30FC", "\u30EA\u30FC\u30F4"]], [$range(85, 90, false), ["\u30DE\u30FC\u30F4", "\u30ED\u30B6\u30EA\u30FC", "\u30EC\u30A4\u30CE\u30EB\u30BA"]], [$range(91, 96, false), ["\u30E9\u30A4\u30A2\u30F3", "\u30EF\u30F3\u30C0", "\u30EF\u30FC\u30C9"]], [$range(97, 100, false), ["\u540D\u7121\u3057\uFF08\u4F55\u3089\u304B\u306E\u7406\u7531\u3067\u540D\u524D\u3092\u6301\u305F\u306A\u3044\u3001\u3082\u3057\u304F\u306F\u5931\u3063\u305F\uFF09"]]]]}).$freeze());
    
    Opal.def(self, '$rollHeroNameTemplateChart', $DeadlineHeroes_rollHeroNameTemplateChart$11 = function $$rollHeroNameTemplateChart() {
      var $a, $b, $$12, $$13, $$14, self = this, chart = nil, dice = nil, templateText = nil, result = nil, elements = nil, resolvedElements = nil, text = nil, resultText = nil, $writer = nil;

      
      chart = $$($nesting, 'HERO_NAME_TEMPLATES');
      $b = self.$roll(1, 10), $a = Opal.to_ary($b), (dice = ($a[0] == null ? nil : $a[0])), $b;
      templateText = chart['$[]'](dice)['$[]']("text");
      if ($truthy(templateText['$nil?']())) {
        return nil};
      result = $hash2(["dice", "result"], {"dice": dice, "result": templateText});
      if (templateText['$==']("\u4EFB\u610F")) {
        return result};
      elements = chart['$[]'](dice)['$[]']("elements");
      resolvedElements = $send(elements, 'map', [], ($$12 = function(i){var self = $$12.$$s || this;

      
        
        if (i == null) {
          i = nil;
        };
        return self.$rollHeroNameBaseChart(i);}, $$12.$$s = self, $$12.$$arity = 1, $$12));
      text = $send(resolvedElements, 'map', [], ($$13 = function(i){var self = $$13.$$s || this;

      
        
        if (i == null) {
          i = nil;
        };
        return self.$getHeroNameElementText(i);}, $$13.$$s = self, $$13.$$arity = 1, $$13)).$join(" \uFF0B ");
      resultText = $send(resolvedElements, 'map', [], ($$14 = function(i){var self = $$14.$$s || this;

      
        
        if (i == null) {
          i = nil;
        };
        return i['$[]']("coreResult");}, $$14.$$s = self, $$14.$$arity = 1, $$14)).$join("").$sub(/\u30FB{2,}/, "\u30FB").$sub(/\u30FB$/, "");
      
      $writer = ["result", $rb_plus(result['$[]']("result"), "" + " \uFF1E ( " + (text) + " ) \uFF1E \u300C" + (resultText) + "\u300D")];
      $send(result, '[]=', Opal.to_a($writer));
      $writer[$rb_minus($writer["length"], 1)];;
      return result;
    }, $DeadlineHeroes_rollHeroNameTemplateChart$11.$$arity = 0);
    
    Opal.def(self, '$getHeroNameElementText', $DeadlineHeroes_getHeroNameElementText$15 = function $$getHeroNameElementText(info) {
      var self = this, result = nil;

      
      result = "";
      if ($truthy(info['$key?']("chartName"))) {
        result = $rb_plus(result, info['$[]']("chartName").$to_s())};
      if ($truthy(info['$key?']("dice"))) {
        result = $rb_plus(result, "" + "(1D10[" + (info['$[]']("dice")) + "]) \uFF1E ")};
      if ($truthy(info['$key?']("innerChartName"))) {
        result = $rb_plus(result, "" + "\uFF3B" + (info['$[]']("innerChartName")) + "\uFF3D \uFF1E 1D10[" + (info['$[]']("innerResult")['$[]']("dice")) + "] \uFF1E ")};
      return (result = $rb_plus(result, "" + "\u300C" + (info['$[]']("coreResult")) + "\u300D"));
    }, $DeadlineHeroes_getHeroNameElementText$15.$$arity = 1);
    
    Opal.def(self, '$rollHeroNameBaseChart', $DeadlineHeroes_rollHeroNameBaseChart$16 = function $$rollHeroNameBaseChart(chartName) {
      var $a, $b, self = this, defaultResult = nil, chart = nil, dice = nil, result = nil, $writer = nil, innerResult = nil;

      
      defaultResult = $hash2(["result", "coreResult"], {"result": chartName, "coreResult": chartName});
      chart = $$($nesting, 'HERO_NAME_BASE_CHARTS')['$[]'](chartName);
      if ($truthy(chart['$nil?']())) {
        return defaultResult};
      $b = self.$roll(1, 10), $a = Opal.to_ary($b), (dice = ($a[0] == null ? nil : $a[0])), $b;
      if ($truthy(chart['$key?'](dice))) {
      } else {
        return defaultResult
      };
      result = $hash2(["dice", "result", "chartName"], {"dice": dice, "result": chart['$[]'](dice), "chartName": chartName});
      
      $writer = ["coreResult", result['$[]']("result")];
      $send(result, '[]=', Opal.to_a($writer));
      $writer[$rb_minus($writer["length"], 1)];;
      if ($truthy(result['$[]']("result")['$=~'](/\uFF3B(.+)\uFF3D/))) {
        
        innerResult = self.$rollHeroNameElementChart($$($nesting, 'Regexp').$last_match(1).$to_s());
        
        $writer = ["innerResult", innerResult];
        $send(result, '[]=', Opal.to_a($writer));
        $writer[$rb_minus($writer["length"], 1)];;
        
        $writer = ["innerChartName", innerResult['$[]']("chartName")];
        $send(result, '[]=', Opal.to_a($writer));
        $writer[$rb_minus($writer["length"], 1)];;
        
        $writer = ["coreResult", innerResult['$[]']("name")];
        $send(result, '[]=', Opal.to_a($writer));
        $writer[$rb_minus($writer["length"], 1)];;
        
        $writer = ["result", $rb_plus(result['$[]']("result"), "" + " \uFF1E 1D10[" + (innerResult['$[]']("dice")) + "] \uFF1E " + (innerResult['$[]']("name")) + "\uFF08\u610F\u5473\uFF1A" + (innerResult['$[]']("mean")) + "\uFF09")];
        $send(result, '[]=', Opal.to_a($writer));
        $writer[$rb_minus($writer["length"], 1)];;};
      return result;
    }, $DeadlineHeroes_rollHeroNameBaseChart$16.$$arity = 1);
    
    Opal.def(self, '$rollHeroNameElementChart', $DeadlineHeroes_rollHeroNameElementChart$17 = function $$rollHeroNameElementChart(chartName) {
      var $a, $b, self = this, chart = nil, dice = nil, name = nil, mean = nil;

      
      chart = $$($nesting, 'HERO_NAME_ELEMENT_CHARTS')['$[]'](chartName.$sub("/", "\uFF0F"));
      if ($truthy(chart['$nil?']())) {
        return nil};
      $b = self.$roll(1, 10), $a = Opal.to_ary($b), (dice = ($a[0] == null ? nil : $a[0])), $b;
      if ($truthy(chart['$key?'](dice))) {
      } else {
        return nil
      };
      $b = chart['$[]'](dice), $a = Opal.to_ary($b), (name = ($a[0] == null ? nil : $a[0])), (mean = ($a[1] == null ? nil : $a[1])), $b;
      return $hash2(["dice", "name", "coreResult", "mean", "chartName"], {"dice": dice, "name": name, "coreResult": name, "mean": mean, "chartName": chartName});
    }, $DeadlineHeroes_rollHeroNameElementChart$17.$$arity = 1);
    Opal.const_set($nesting[0], 'HERO_NAME_TEMPLATES', $hash(1, $hash2(["text", "elements"], {"text": "\u30D9\u30FC\u30B9\uFF21\uFF0B\u30D9\u30FC\u30B9\uFF22", "elements": ["\u30D9\u30FC\u30B9\uFF21", "\u30D9\u30FC\u30B9\uFF22"]}), 2, $hash2(["text", "elements"], {"text": "\u30D9\u30FC\u30B9\uFF22", "elements": ["\u30D9\u30FC\u30B9\uFF22"]}), 3, $hash2(["text", "elements"], {"text": "\u30D9\u30FC\u30B9\uFF22\u00D7\uFF12\u56DE", "elements": ["\u30D9\u30FC\u30B9\uFF22", "\u30D9\u30FC\u30B9\uFF22"]}), 4, $hash2(["text", "elements"], {"text": "\u30D9\u30FC\u30B9\uFF22\uFF0B\u30D9\u30FC\u30B9\uFF23", "elements": ["\u30D9\u30FC\u30B9\uFF22", "\u30D9\u30FC\u30B9\uFF23"]}), 5, $hash2(["text", "elements"], {"text": "\u30D9\u30FC\u30B9\uFF21\uFF0B\u30D9\u30FC\u30B9\uFF22\uFF0B\u30D9\u30FC\u30B9\uFF23", "elements": ["\u30D9\u30FC\u30B9\uFF21", "\u30D9\u30FC\u30B9\uFF22", "\u30D9\u30FC\u30B9\uFF23"]}), 6, $hash2(["text", "elements"], {"text": "\u30D9\u30FC\u30B9\uFF21\uFF0B\u30D9\u30FC\u30B9\uFF22\u00D7\uFF12\u56DE", "elements": ["\u30D9\u30FC\u30B9\uFF21", "\u30D9\u30FC\u30B9\uFF22", "\u30D9\u30FC\u30B9\uFF22"]}), 7, $hash2(["text", "elements"], {"text": "\u30D9\u30FC\u30B9\uFF22\u00D7\uFF12\u56DE\uFF0B\u30D9\u30FC\u30B9\uFF23", "elements": ["\u30D9\u30FC\u30B9\uFF22", "\u30D9\u30FC\u30B9\uFF22", "\u30D9\u30FC\u30B9\uFF23"]}), 8, $hash2(["text", "elements"], {"text": "\uFF08\u30D9\u30FC\u30B9\uFF22\uFF09\u30FB\u30AA\u30D6\u30FB\uFF08\u30D9\u30FC\u30B9\uFF22\uFF09", "elements": ["\u30D9\u30FC\u30B9\uFF22", "\u30FB\u30AA\u30D6\u30FB", "\u30D9\u30FC\u30B9\uFF22"]}), 9, $hash2(["text", "elements"], {"text": "\uFF08\u30D9\u30FC\u30B9\uFF22\uFF09\u30FB\u30B6\u30FB\uFF08\u30D9\u30FC\u30B9\uFF22\uFF09", "elements": ["\u30D9\u30FC\u30B9\uFF22", "\u30FB\u30B6\u30FB", "\u30D9\u30FC\u30B9\uFF22"]}), 10, $hash2(["text", "elements"], {"text": "\u4EFB\u610F", "elements": ["\u4EFB\u610F"]})).$freeze());
    Opal.const_set($nesting[0], 'HERO_NAME_BASE_CHARTS', $hash2(["\u30D9\u30FC\u30B9\uFF21", "\u30D9\u30FC\u30B9\uFF22", "\u30D9\u30FC\u30B9\uFF23"], {"\u30D9\u30FC\u30B9\uFF21": $hash(1, "\u30B6\u30FB", 2, "\u30AD\u30E3\u30D7\u30C6\u30F3\u30FB", 3, "\u30DF\u30B9\u30BF\u30FC\uFF0F\u30DF\u30B9\uFF0F\u30DF\u30BB\u30B9\u30FB", 4, "\u30C9\u30AF\u30BF\u30FC\uFF0F\u30D7\u30ED\u30D5\u30A7\u30C3\u30B5\u30FC\u30FB", 5, "\u30ED\u30FC\u30C9\uFF0F\u30D0\u30ED\u30F3\uFF0F\u30B8\u30A7\u30CD\u30E9\u30EB\u30FB", 6, "\u30DE\u30F3\u30FB\u30AA\u30D6\u30FB", 7, "\uFF3B\u5F37\u3055\uFF3D", 8, "\uFF3B\u8272\uFF3D", 9, "\u30DE\u30C0\u30E0\uFF0F\u30DF\u30C9\u30EB\u30FB", 10, "\u6570\u5B57\uFF08\uFF11\uFF5E10\uFF09\u30FB"), "\u30D9\u30FC\u30B9\uFF22": $hash(1, "\uFF3B\u795E\u8A71\uFF0F\u5922\uFF3D", 2, "\uFF3B\u6B66\u5668\uFF3D", 3, "\uFF3B\u52D5\u7269\uFF3D", 4, "\uFF3B\u9CE5\uFF3D", 5, "\uFF3B\u866B\uFF0F\u722C\u866B\u985E\uFF3D", 6, "\uFF3B\u90E8\u4F4D\uFF3D", 7, "\uFF3B\u5149\uFF3D", 8, "\uFF3B\u653B\u6483\uFF3D", 9, "\uFF3B\u305D\u306E\u4ED6\uFF3D", 10, "\u6570\u5B57\uFF08\uFF11\uFF5E10\uFF09\u30FB"), "\u30D9\u30FC\u30B9\uFF23": $hash(1, "\u30DE\u30F3\uFF0F\u30A6\u30FC\u30DE\u30F3", 2, "\u30DC\u30FC\u30A4\uFF0F\u30AC\u30FC\u30EB", 3, "\u30DE\u30B9\u30AF\uFF0F\u30D5\u30FC\u30C9", 4, "\u30E9\u30A4\u30C0\u30FC", 5, "\u30DE\u30B9\u30BF\u30FC", 6, "\u30D5\u30A1\u30A4\u30BF\u30FC\uFF0F\u30BD\u30EB\u30B8\u30E3\u30FC", 7, "\u30AD\u30F3\u30B0\uFF0F\u30AF\u30A4\u30FC\u30F3", 8, "\uFF3B\u8272\uFF3D", 9, "\u30D2\u30FC\u30ED\u30FC\uFF0F\u30B9\u30DA\u30B7\u30E3\u30EB", 10, "\u30D2\u30FC\u30ED\u30FC\uFF0F\u30B9\u30DA\u30B7\u30E3\u30EB")}).$freeze());
    return Opal.const_set($nesting[0], 'HERO_NAME_ELEMENT_CHARTS', $hash2(["\u90E8\u4F4D", "\u6B66\u5668", "\u8272", "\u52D5\u7269", "\u795E\u8A71\uFF0F\u5922", "\u653B\u6483", "\u305D\u306E\u4ED6", "\u9CE5", "\u5149", "\u866B\uFF0F\u722C\u866B\u985E", "\u5F37\u3055"], {"\u90E8\u4F4D": $hash(1, ["\u30CF\u30FC\u30C8", "\u5FC3\u81D3"], 2, ["\u30D5\u30A7\u30A4\u30B9", "\u9854"], 3, ["\u30A2\u30FC\u30E0", "\u8155"], 4, ["\u30B7\u30E7\u30EB\u30C0\u30FC", "\u80A9"], 5, ["\u30D8\u30C3\u30C9", "\u982D"], 6, ["\u30A2\u30A4", "\u773C"], 7, ["\u30D5\u30A3\u30B9\u30C8", "\u62F3"], 8, ["\u30CF\u30F3\u30C9", "\u624B"], 9, ["\u30AF\u30ED\u30A6", "\u722A"], 10, ["\u30DC\u30FC\u30F3", "\u9AA8"]), "\u6B66\u5668": $hash(1, ["\u30CA\u30A4\u30F4\u30B9", "\u77ED\u5263"], 2, ["\u30BD\u30FC\u30C9", "\u5263"], 3, ["\u30CF\u30F3\u30DE\u30FC", "\u939A"], 4, ["\u30AC\u30F3", "\u9283"], 5, ["\u30B9\u30C6\u30A3\u30FC\u30EB", "\u5203"], 6, ["\u30BF\u30B9\u30AF", "\u7259"], 7, ["\u30CB\u30E5\u30FC\u30AF", "\u6838"], 8, ["\u30A2\u30ED\u30FC", "\u77E2"], 9, ["\u30BD\u30A6", "\u30CE\u30B3\u30AE\u30EA"], 10, ["\u30EC\u30A4\u30B6\u30FC", "\u5243\u5200"]), "\u8272": $hash(1, ["\u30D6\u30E9\u30C3\u30AF", "\u9ED2"], 2, ["\u30B0\u30EA\u30FC\u30F3", "\u7DD1"], 3, ["\u30D6\u30EB\u30FC", "\u9752"], 4, ["\u30A4\u30A8\u30ED\u30FC", "\u9EC3"], 5, ["\u30EC\u30C3\u30C9", "\u8D64"], 6, ["\u30D0\u30A4\u30AA\u30EC\u30C3\u30C8", "\u7D2B"], 7, ["\u30B7\u30EB\u30D0\u30FC", "\u9280"], 8, ["\u30B4\u30FC\u30EB\u30C9", "\u91D1"], 9, ["\u30DB\u30EF\u30A4\u30C8", "\u767D"], 10, ["\u30AF\u30EA\u30A2", "\u900F\u660E"]), "\u52D5\u7269": $hash(1, ["\u30D0\u30CB\u30FC", "\u30A6\u30B5\u30AE"], 2, ["\u30BF\u30A4\u30AC\u30FC", "\u864E"], 3, ["\u30B7\u30E3\u30FC\u30AF", "\u9BAB"], 4, ["\u30AD\u30E3\u30C3\u30C8", "\u732B"], 5, ["\u30B3\u30F3\u30B0", "\u30B4\u30EA\u30E9"], 6, ["\u30C9\u30C3\u30B0", "\u72AC"], 7, ["\u30D5\u30A9\u30C3\u30AF\u30B9", "\u72D0"], 8, ["\u30D1\u30F3\u30B5\u30FC", "\u8C79"], 9, ["\u30A2\u30B9", "\u30ED\u30D0"], 10, ["\u30D0\u30C3\u30C8", "\u8759\u8760"]), "\u795E\u8A71\uFF0F\u5922": $hash(1, ["\u30A2\u30DD\u30AB\u30EA\u30D7\u30B9", "\u9ED9\u793A\u9332"], 2, ["\u30A6\u30A9\u30FC", "\u6226\u4E89"], 3, ["\u30A8\u30BF\u30FC\u30CA\u30EB", "\u6C38\u9060"], 4, ["\u30A8\u30F3\u30B8\u30A7\u30EB", "\u5929\u4F7F"], 5, ["\u30C7\u30D3\u30EB", "\u60AA\u9B54"], 6, ["\u30A4\u30E2\u30FC\u30BF\u30EB", "\u6B7B\u306A\u306A\u3044"], 7, ["\u30C7\u30B9", "\u6B7B\u795E"], 8, ["\u30C9\u30EA\u30FC\u30E0", "\u5922"], 9, ["\u30B4\u30FC\u30B9\u30C8", "\u5E7D\u970A"], 10, ["\u30C7\u30C3\u30C9", "\u6B7B\u3093\u3067\u3044\u308B"]), "\u653B\u6483": $hash(1, ["\u30B9\u30C8\u30ED\u30FC\u30AF", "\u4E00\u6483"], 2, ["\u30AF\u30E9\u30C3\u30B7\u30E5", "\u58CA\u3059"], 3, ["\u30D6\u30ED\u30A6", "\u5439\u304D\u98DB\u3070\u3059"], 4, ["\u30D2\u30C3\u30C8", "\u6253\u3064"], 5, ["\u30D1\u30F3\u30C1", "\u6BB4\u308B"], 6, ["\u30AD\u30C3\u30AF", "\u8E74\u308B"], 7, ["\u30B9\u30E9\u30C3\u30B7\u30E5", "\u65AC\u308B"], 8, ["\u30DA\u30CD\u30C8\u30EC\u30A4\u30C8", "\u8CAB\u304F"], 9, ["\u30B7\u30E7\u30C3\u30C8", "\u6483\u3064"], 10, ["\u30AD\u30EB", "\u6BBA\u3059"]), "\u305D\u306E\u4ED6": $hash(1, ["\u30D2\u30E5\u30FC\u30DE\u30F3", "\u4EBA\u9593"], 2, ["\u30A8\u30FC\u30B8\u30A7\u30F3\u30C8", "\u4EE3\u7406\u4EBA"], 3, ["\u30D6\u30FC\u30B9\u30BF\u30FC", "\u6CE5\u68D2"], 4, ["\u30A2\u30A4\u30A2\u30F3", "\u9244"], 5, ["\u30B5\u30F3\u30C0\u30FC", "\u96F7"], 6, ["\u30A6\u30A9\u30C3\u30C1\u30E3\u30FC", "\u76E3\u8996\u8005"], 7, ["\u30D7\u30FC\u30EB", "\u6C34\u305F\u307E\u308A"], 8, ["\u30DE\u30B7\u30FC\u30F3", "\u6A5F\u68B0"], 9, ["\u30B3\u30FC\u30EB\u30C9", "\u51B7\u305F\u3044"], 10, ["\u30B5\u30A4\u30C9", "\u5074\u9762"]), "\u9CE5": $hash(1, ["\u30DB\u30FC\u30AF", "\u9DF9"], 2, ["\u30D5\u30A1\u30EB\u30B3\u30F3", "\u96BC"], 3, ["\u30AD\u30E3\u30CA\u30EA\u30FC", "\u30AB\u30CA\u30EA\u30A2"], 4, ["\u30ED\u30D3\u30F3", "\u30B3\u30DE\u30C4\u30B0\u30DF"], 5, ["\u30A4\u30FC\u30B0\u30EB", "\u9DF2"], 6, ["\u30AA\u30A6\u30EB", "\u30D5\u30AF\u30ED\u30A6"], 7, ["\u30EC\u30A4\u30D6\u30F3", "\u30EF\u30BF\u30EA\u30AC\u30E9\u30B9"], 8, ["\u30C0\u30C3\u30AF", "\u30A2\u30D2\u30EB"], 9, ["\u30DA\u30F3\u30AE\u30F3", "\u30DA\u30F3\u30AE\u30F3"], 10, ["\u30D5\u30A7\u30CB\u30C3\u30AF\u30B9", "\u4E0D\u6B7B\u9CE5"]), "\u5149": $hash(1, ["\u30E9\u30A4\u30C8", "\u5149"], 2, ["\u30B7\u30E3\u30C9\u30A6", "\u5F71"], 3, ["\u30D5\u30A1\u30A4\u30A2\u30FC", "\u708E"], 4, ["\u30C0\u30FC\u30AF", "\u6697\u3044"], 5, ["\u30CA\u30A4\u30C8", "\u591C"], 6, ["\u30D5\u30A1\u30F3\u30C8\u30E0", "\u5E7B\u5F71"], 7, ["\u30C8\u30FC\u30C1", "\u706F\u706B"], 8, ["\u30D5\u30E9\u30C3\u30B7\u30E5", "\u9583\u5149"], 9, ["\u30E9\u30F3\u30BF\u30F3", "\u624B\u3055\u3052\u30E9\u30F3\u30D7"], 10, ["\u30B5\u30F3", "\u592A\u967D"]), "\u866B\uFF0F\u722C\u866B\u985E": $hash(1, ["\u30D3\u30FC\u30C8\u30EB", "\u7532\u866B"], 2, ["\u30D0\u30BF\u30D5\u30E9\u30A4\uFF0F\u30E2\u30B9", "\u8776\uFF0F\u86FE"], 3, ["\u30B9\u30CD\u30FC\u30AF\uFF0F\u30B3\u30D6\u30E9", "\u86C7"], 4, ["\u30A2\u30EA\u30B2\u30FC\u30BF\u30FC", "\u30EF\u30CB"], 5, ["\u30ED\u30FC\u30AB\u30B9\u30C8", "\u30D0\u30C3\u30BF"], 6, ["\u30EA\u30B6\u30FC\u30C9", "\u30C8\u30AB\u30B2"], 7, ["\u30BF\u30FC\u30C8\u30EB", "\u4E80"], 8, ["\u30B9\u30D1\u30A4\u30C0\u30FC", "\u8718\u86DB"], 9, ["\u30A2\u30F3\u30C8", "\u30A2\u30EA"], 10, ["\u30DE\u30F3\u30C6\u30A3\u30B9", "\u30AB\u30DE\u30AD\u30EA"]), "\u5F37\u3055": $hash(1, ["\u30B9\u30FC\u30D1\u30FC\uFF0F\u30A6\u30EB\u30C8\u30E9", "\u8D85"], 2, ["\u30EF\u30F3\u30C0\u30FC", "\u9A5A\u7570\u7684"], 3, ["\u30A2\u30EB\u30C6\u30A3\u30E1\u30C3\u30C8", "\u7A76\u6975\u306E"], 4, ["\u30D5\u30A1\u30F3\u30BF\u30B9\u30C6\u30A3\u30C3\u30AF", "\u9014\u65B9\u3082\u306A\u3044"], 5, ["\u30DE\u30A4\u30C6\u30A3", "\u5F37\u3044"], 6, ["\u30A4\u30F3\u30AF\u30EC\u30C7\u30A3\u30D6\u30EB", "\u51C4\u3044"], 7, ["\u30A2\u30E1\u30FC\u30B8\u30F3\u30B0", "\u7D20\u6674\u3089\u3057\u3044"], 8, ["\u30EF\u30A4\u30EB\u30C9", "\u72C2\u4E71\u306E"], 9, ["\u30B0\u30EC\u30A4\u30C6\u30B9\u30C8", "\u81F3\u9AD8\u306E"], 10, ["\u30DE\u30FC\u30D9\u30E9\u30B9", "\u9A5A\u304F\u3079\u304D"])}).$freeze());
  })($nesting[0], $$($nesting, 'DiceBot'), $nesting)
})(Opal);
