/* Generated by Opal 1.0.3 */
(function(Opal) {
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_divide(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);
  }
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  function $rb_lt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2;

  Opal.add_stubs(['$debug', '$getConductResult', '$nil?', '$getResistResult', '$getReactionResult', '$getCorruptionResult', '$getTableResult', '$===', '$to_i', '$last_match', '$==', '$rollDiceList', '$getGloryDiceCount', '$times', '$<<', '$getThirstyAddedResult', '$empty?', '$+', '$join', '$roll', '$sort', '$collect', '$split', '$countTargetDice', '$floor', '$/', '$count', '$select', '$rindex', '$<=', '$each_with_index', '$to_s', '$[]', '$[]=', '$-', '$upcase', '$getReactionTable', '$get_table_by_d66', '$<', '$getReactionTextFull', '$index', '$getReactionTex', '$get_table_by_number', '$get_table_by_2d6', '$get_table_by_1d6', '$freeze', '$setPrefixes', '$keys']);
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'Dracurouge_Korean');

    var $nesting = [self].concat($parent_nesting), $Dracurouge_Korean_initialize$1, $Dracurouge_Korean_rollDiceCommand$2, $Dracurouge_Korean_getConductResult$3, $Dracurouge_Korean_rollDiceList$5, $Dracurouge_Korean_getGloryDiceCount$7, $Dracurouge_Korean_countTargetDice$8, $Dracurouge_Korean_getThirstyAddedResult$10, $Dracurouge_Korean_getResistResult$13, $Dracurouge_Korean_getReactionResult$14, $Dracurouge_Korean_getReactionTextFull$15, $Dracurouge_Korean_getReactionTex$17, $Dracurouge_Korean_getReactionTable$18, $Dracurouge_Korean_getCorruptionResult$19, $Dracurouge_Korean_getTableResult$20, $Dracurouge_Korean_getCorruptionTable$21;

    
    Opal.const_set($nesting[0], 'ID', "Dracurouge:Korean");
    Opal.const_set($nesting[0], 'NAME', "\uB4DC\uB77C\uD06C\uB8E8\uC8FC");
    Opal.const_set($nesting[0], 'SORT_KEY', "\u56FD\u969B\u5316:Korean:\uB4DC\uB77C\uD06C\uB8E8\uC8FC");
    Opal.const_set($nesting[0], 'HELP_MESSAGE', "" + "\u30FB\uD589\uB3D9\uD310\uC815\uFF08DRx+y\uFF09\n" + "\u3000x\uFF1A\uAD74\uB9AC\uB294 \uC8FC\uC0AC\uC704\uC758 \uC218\uFF08\uC0DD\uB7B5\uC2DC\uFF14\uFF09, y\uFF1A\uAC08\uC99D\uC218\uC815\uFF08\uC0DD\uB7B5\uC2DC\uFF10\uFF09\n" + "\u3000\uC608\uFF09 DR\u3000DR6\u3000DR+1\u3000DR5+2\n" + "\u30FB\uC800\uD56D\uD310\uC815\uFF08DRRx\uFF09\n" + "\u3000x\uFF1A\uAD74\uB9AC\uB294 \uC8FC\uC0AC\uC704\uC758\n" + "\u3000\uC608\uFF09 DRR3\n" + "\u30FB\uD0C0\uB77D\uD45C\uFF08CTx\uFF09 x\uFF1A\uAC08\uC99D\uFF08\uC608\uFF09 CT3\n" + "\u30FB\uD0C0\uB77D\uC758 \uC804\uC870\uD45C\uFF08CS\uFF09\n" + "\u30FB\uC778\uC5F0 \uB0B4\uC6A9 \uACB0\uC815\uD45C\uFF08BT\uFF09\n" + "\u30FB\uBC18\uC751\uD45C\uFF08RTxy\uFF09x\uFF1A\uD608\uD1B5, y\uFF1A\uAE38\u3000xy\uC0DD\uB7B5\uC73C\uB85C \uC77C\uAD04\uD45C\uC2DC\n" + "\u3000\u3000\uD608\uD1B5\u3000D\uFF1A\uB4DC\uB77C\uD06C, R\uFF1A\uB85C\uC820\uBD80\uB974\uD06C, H\uFF1A\uD5EC\uC2A4\uAC00\uB974\uB4DC, M\uFF1A\uB354\uC2A4\uD2B8\uD558\uC784,\n" + "\u3000\u3000\u3000\u3000\u3000A\uFF1A\uC544\uBC1C\uB86C\u3000N\uFF1A\uB178\uC2A4\uD398\uB77C\uC2A4\n" + "\u3000\u3000\uAE38\u3000\u3000F\uFF1A\uC601\uC8FC, G\uFF1A\uADFC\uC704, R\uFF1A\uBC29\uB791, W\uFF1A\uD604\uC790, J\uFF1A\uC0AC\uB0E5\uAFBC, N\uFF1A\uC57C\uC218\n" + "\u3000\uC608\uFF09RT\uFF08\uC77C\uAD04\uD45C\uC2DC\uFF09, RTDF\uFF08\uB4DC\uB77C\uD06C \uC601\uC8FC\uFF09, RTAN\uFF08\uC544\uBC1C\uB86C \uC57C\uC218\uFF09\n" + "\u30FBD66 \uB2E4\uC774\uC2A4 \uC788\uC74C\n");
    
    Opal.def(self, '$initialize', $Dracurouge_Korean_initialize$1 = function $$initialize() {
      var $iter = $Dracurouge_Korean_initialize$1.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;

      if ($iter) $Dracurouge_Korean_initialize$1.$$p = null;
      // Prepare super implicit arguments
      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {
        $zuper[$zuper_i] = arguments[$zuper_i];
      }
      
      $send(self, Opal.find_super_dispatcher(self, 'initialize', $Dracurouge_Korean_initialize$1, false), $zuper, $iter);
      return (self.d66Type = 1);
    }, $Dracurouge_Korean_initialize$1.$$arity = 0);
    
    Opal.def(self, '$rollDiceCommand', $Dracurouge_Korean_rollDiceCommand$2 = function $$rollDiceCommand(command) {
      var self = this, result = nil;

      
      self.$debug("rollDiceCommand");
      result = self.$getConductResult(command);
      if ($truthy(result['$nil?']())) {
      } else {
        return result
      };
      result = self.$getResistResult(command);
      if ($truthy(result['$nil?']())) {
      } else {
        return result
      };
      result = self.$getReactionResult(command);
      if ($truthy(result['$nil?']())) {
      } else {
        return result
      };
      result = self.$getCorruptionResult(command);
      if ($truthy(result['$nil?']())) {
      } else {
        return result
      };
      result = self.$getTableResult(command);
      if ($truthy(result['$nil?']())) {
      } else {
        return result
      };
      return nil;
    }, $Dracurouge_Korean_rollDiceCommand$2.$$arity = 1);
    
    Opal.def(self, '$getConductResult', $Dracurouge_Korean_getConductResult$3 = function $$getConductResult(command) {
      var $$4, $a, $b, self = this, diceCount = nil, thirstyPoint = nil, diceList = nil, gloryDiceCount = nil, calculationProcess = nil, thirstyPointMarker = nil, result = nil;

      
      if ($truthy(/^DR(\d*)(\+(\d+))?$/['$==='](command))) {
      } else {
        return nil
      };
      diceCount = $$($nesting, 'Regexp').$last_match(1).$to_i();
      if (diceCount['$=='](0)) {
        diceCount = 4};
      thirstyPoint = $$($nesting, 'Regexp').$last_match(3).$to_i();
      diceList = self.$rollDiceList(diceCount);
      gloryDiceCount = self.$getGloryDiceCount(diceList);
      $send(gloryDiceCount, 'times', [], ($$4 = function(){var self = $$4.$$s || this;

      return diceList['$<<'](10)}, $$4.$$s = self, $$4.$$arity = 0, $$4));
      $b = self.$getThirstyAddedResult(diceList, thirstyPoint), $a = Opal.to_ary($b), (diceList = ($a[0] == null ? nil : $a[0])), (calculationProcess = ($a[1] == null ? nil : $a[1])), $b;
      thirstyPointMarker = (function() {if (thirstyPoint['$=='](0)) {
        return ""
      } else {
        return "" + "+" + (thirstyPoint)
      }; return nil; })();
      result = "" + "(" + (command) + ") \uFF1E " + (diceCount) + "D6" + (thirstyPointMarker) + " \uFF1E ";
      if ($truthy(calculationProcess['$empty?']())) {
      } else {
        result = $rb_plus(result, "" + "[ " + (calculationProcess) + " ] \uFF1E ")
      };
      result = $rb_plus(result, "" + "[ " + (diceList.$join(", ")) + " ]");
      return result;
    }, $Dracurouge_Korean_getConductResult$3.$$arity = 1);
    
    Opal.def(self, '$rollDiceList', $Dracurouge_Korean_rollDiceList$5 = function $$rollDiceList(diceCount) {
      var $a, $b, $$6, self = this, _dice = nil, str = nil, diceList = nil;

      
      $b = self.$roll(diceCount, 6), $a = Opal.to_ary($b), (_dice = ($a[0] == null ? nil : $a[0])), (str = ($a[1] == null ? nil : $a[1])), $b;
      diceList = $send(str.$split(/,/), 'collect', [], ($$6 = function(i){var self = $$6.$$s || this;

      
        
        if (i == null) {
          i = nil;
        };
        return i.$to_i();}, $$6.$$s = self, $$6.$$arity = 1, $$6)).$sort();
      return diceList;
    }, $Dracurouge_Korean_rollDiceList$5.$$arity = 1);
    
    Opal.def(self, '$getGloryDiceCount', $Dracurouge_Korean_getGloryDiceCount$7 = function $$getGloryDiceCount(diceList) {
      var self = this, oneCount = nil, sixCount = nil, gloryDiceCount = nil;

      
      oneCount = self.$countTargetDice(diceList, 1);
      sixCount = self.$countTargetDice(diceList, 6);
      gloryDiceCount = $rb_plus($rb_divide(oneCount, 2).$floor(), $rb_divide(sixCount, 2).$floor());
      return gloryDiceCount;
    }, $Dracurouge_Korean_getGloryDiceCount$7.$$arity = 1);
    
    Opal.def(self, '$countTargetDice', $Dracurouge_Korean_countTargetDice$8 = function $$countTargetDice(diceList, target) {
      var $$9, self = this;

      return $send(diceList, 'select', [], ($$9 = function(i){var self = $$9.$$s || this;

      
        
        if (i == null) {
          i = nil;
        };
        return i['$=='](target);}, $$9.$$s = self, $$9.$$arity = 1, $$9)).$count()
    }, $Dracurouge_Korean_countTargetDice$8.$$arity = 2);
    
    Opal.def(self, '$getThirstyAddedResult', $Dracurouge_Korean_getThirstyAddedResult$10 = function $$getThirstyAddedResult(diceList, thirstyPoint) {
      var $$11, $$12, self = this, targetIndex = nil, textList = nil, $writer = nil;

      
      if (thirstyPoint['$=='](0)) {
        return [diceList, ""]};
      targetIndex = $send(diceList, 'rindex', [], ($$11 = function(i){var self = $$11.$$s || this;

      
        
        if (i == null) {
          i = nil;
        };
        return $rb_le(i, 6);}, $$11.$$s = self, $$11.$$arity = 1, $$11));
      if ($truthy(targetIndex['$nil?']())) {
        return [diceList, ""]};
      textList = [];
      $send(diceList, 'each_with_index', [], ($$12 = function(item, index){var self = $$12.$$s || this;

      
        
        if (item == null) {
          item = nil;
        };
        
        if (index == null) {
          index = nil;
        };
        if (targetIndex['$=='](index)) {
          return textList['$<<']("" + (item) + "+" + (thirstyPoint))
        } else {
          return textList['$<<'](item.$to_s())
        };}, $$12.$$s = self, $$12.$$arity = 2, $$12));
      
      $writer = [targetIndex, $rb_plus(diceList['$[]'](targetIndex), thirstyPoint)];
      $send(diceList, '[]=', Opal.to_a($writer));
      $writer[$rb_minus($writer["length"], 1)];;
      return [diceList, textList.$join(", ")];
    }, $Dracurouge_Korean_getThirstyAddedResult$10.$$arity = 2);
    
    Opal.def(self, '$getResistResult', $Dracurouge_Korean_getResistResult$13 = function $$getResistResult(command) {
      var self = this, diceCount = nil, diceList = nil;

      
      if ($truthy(/^DRR(\d+)$/['$==='](command))) {
      } else {
        return nil
      };
      diceCount = $$($nesting, 'Regexp').$last_match(1).$to_i();
      if (diceCount['$=='](0)) {
        diceCount = 4};
      diceList = self.$rollDiceList(diceCount);
      return "" + "(" + (command) + ") \uFF1E " + (diceCount) + "D6 \uFF1E [ " + (diceList.$join(", ")) + " ]";
    }, $Dracurouge_Korean_getResistResult$13.$$arity = 1);
    
    Opal.def(self, '$getReactionResult', $Dracurouge_Korean_getReactionResult$14 = function $$getReactionResult(command) {
      var $a, $b, self = this, typeText1 = nil, typeText2 = nil, name = nil, table = nil, tableText = nil, number = nil, type1 = nil, type1_indexTexts = nil, type2 = nil, type2_indexTexts = nil, tensValue = nil, isBefore = nil, type = nil, indexTexts = nil, typeText = nil, resultText = nil, index = nil;

      
      if ($truthy(/^RT((\w)(\w))?/['$==='](command.$upcase()))) {
      } else {
        return nil
      };
      typeText1 = $$($nesting, 'Regexp').$last_match(2);
      typeText2 = $$($nesting, 'Regexp').$last_match(3);
      name = "\uBC18\uC751\uD45C";
      table = self.$getReactionTable();
      $b = self.$get_table_by_d66(table), $a = Opal.to_ary($b), (tableText = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b;
      type1 = ["\uB4DC\uB77C\uD06C", "\uB85C\uC820\uBD80\uB974\uD06C", "\uD5EC\uC2A4\uAC00\uB974\uB4DC", "\uB354\uC2A4\uD2B8\uD558\uC784", "\uC544\uBC1C\uB86C", "\uB178\uC2A4\uD398\uB77C\uC2A4"];
      type1_indexTexts = ["D", "R", "H", "M", "A", "N"];
      type2 = ["\uC601\uC8FC", "\uADFC\uC704", "\uBC29\uB791", "\uD604\uC790", "\uC0AC\uB0E5\uAFBC", "\uC57C\uC218"];
      type2_indexTexts = ["F", "G", "R", "W", "J", "N"];
      tensValue = $rb_divide(number.$to_i(), 10).$floor();
      isBefore = $rb_lt(tensValue, 4);
      type = (function() {if ($truthy(isBefore)) {
        return type1
      } else {
        return type2
      }; return nil; })();
      indexTexts = (function() {if ($truthy(isBefore)) {
        return type1_indexTexts
      } else {
        return type2_indexTexts
      }; return nil; })();
      typeText = (function() {if ($truthy(isBefore)) {
        return typeText1
      } else {
        return typeText2
      }; return nil; })();
      resultText = "";
      if ($truthy(typeText['$nil?']())) {
        resultText = self.$getReactionTextFull(type, tableText)
      } else {
        
        index = indexTexts.$index(typeText);
        if ($truthy(index['$nil?']())) {
          return nil};
        resultText = self.$getReactionTex(index, type, tableText);
      };
      return "" + (name) + "(" + (number) + ") \uFF1E " + (resultText);
    }, $Dracurouge_Korean_getReactionResult$14.$$arity = 1);
    
    Opal.def(self, '$getReactionTextFull', $Dracurouge_Korean_getReactionTextFull$15 = function $$getReactionTextFull(type, tableText) {
      var $$16, self = this, resultTexts = nil;

      
      resultTexts = [];
      $send(type.$count(), 'times', [], ($$16 = function(index){var self = $$16.$$s || this;

      
        
        if (index == null) {
          index = nil;
        };
        return resultTexts['$<<'](self.$getReactionTex(index, type, tableText));}, $$16.$$s = self, $$16.$$arity = 1, $$16));
      return resultTexts.$join("\uFF0F");
    }, $Dracurouge_Korean_getReactionTextFull$15.$$arity = 2);
    
    Opal.def(self, '$getReactionTex', $Dracurouge_Korean_getReactionTex$17 = function $$getReactionTex(index, type, tableText) {
      var self = this, typeName = nil, texts = nil, string = nil;

      
      typeName = type['$[]'](index);
      texts = tableText.$split(/\t/);
      string = texts['$[]'](index);
      return "" + (typeName) + "\uFF1A" + (string);
    }, $Dracurouge_Korean_getReactionTex$17.$$arity = 3);
    
    Opal.def(self, '$getReactionTable', $Dracurouge_Korean_getReactionTable$18 = function $$getReactionTable() {
      var self = this, text = nil;

      
      text = "" + "\uD558\uB298\uC5D0 \uBE5B\uB098\uB294 \uBD89\uC740 \uB2EC\uC744 \uC62C\uB824\uBCF8\uB2E4\t\uCF67\uBC29\uADC0\uB97C \uB010\uB2E4\t\uD5DB\uAE30\uCE68\uC744 \uD55C\uB2E4\t\uBBF8\uAC04\uC744 \uCC0C\uD478\uB9AC\uACE0 \uC0DD\uAC01\uC5D0 \uC7A0\uAE34\uB2E4\t\uD558\uD488\uC744 \uCC38\uB294\uB2E4\t\uBA85\uC655\uB839\uC758 \uBC29\uD5A5\uC744 \uB178\uB824\uBCF8\uB2E4\n" + "\uC791\uAC8C \uD55C\uC228\uC744 \uC270\uB2E4\t\uC55E\uBA38\uB9AC\uB97C \uC4F8\uC5B4 \uC62C\uB9B0\uB2E4\t\uB208\uC379\uC744 \uCC0C\uD478\uB9B0\uB2E4\t\uC8FC\uBCC0\uC744 \uD3C9\uAC00\uD558\uB294 \uB208\uC73C\uB85C \uBCF8\uB2E4\t\uBA38\uB9AC\uB97C \uAE01\uC801\uC778\uB2E4\t\uD600\uB97C \uCC2C\uB2E4\n" + "\uC0C1\uB300\uB97C \uB0B4\uB824\uB2E4\uBCF4\uB4EF\uC774 \uBCF8\uB2E4\t\uC790\uC2E0\uC758 \uBA38\uB9AC\uB97C \uB9CC\uC9C4\uB2E4\t\uD22C\uB35C\uAC70\uB9B0\uB2E4\t\uC190\uC5D0 \uCC45\uC744 \uAD6C\uD604\uD654\uC2DC\uCF1C \uC801\uC5B4\uB123\uB294\uB2E4\t\uC190\uC5D0 \uC0DD\uAE34 \uACFC\uC77C\uC744 \uBA39\uB294\uB2E4\t\uACE0\uAC1C\uC219\uC5EC \uBC14\uB2E5\uC774\uB098 \uC9C0\uBA74\uC744 \uB178\uB824\uBCF8\uB2E4\n" + "\uC9C0\uADF8\uC2DC \uB208\uC744 \uAC10\uACE0 \uB9D0\uC744 \uAC74\uB2E4\t\uD63C\uC790\uC11C \uC791\uAC8C \uC6C3\uB294\uB2E4\t\uBB34\uD45C\uC815\uD558\uAC8C \uC0C1\uB300\uB97C \uAD00\uCC30\uD55C\uB2E4\t\uC7AC\uBBF8\uC5C6\uB2E4\uB294 \uB4EF\uC774 \uBC14\uB77C\uBCF8\uB2E4\t\uBD99\uC784\uC131 \uC88B\uC740 \uC6C3\uC74C\uC744 \uC9D3\uB294\uB2E4\t\uBB34\uC758\uC2DD\uC801\uC73C\uB85C \uB208\uBB3C\uC774 \uD750\uB978\uB2E4\n" + "\uD76C\uBBF8\uD558\uAC8C \uBBF8\uC18C\uC9D3\uB294\uB2E4\t\uCF67\uB178\uB798\uB97C \uBD80\uB978\uB2E4\t\uBC1C\uBC11\uC5D0 \uC9C0\uC625\uBB38\uC774 \uC0DD\uAE34\uB2E4\t\uC548\uC815\uB41C \uBC1C\uAC78\uC74C\uC73C\uB85C \uB2E4\uAC00\uAC04\uB2E4\t\uBC24\uC0C8\uAC00 \uC5B4\uAE68\uC5D0 \uB0A0\uC544\uB4E0\uB2E4\t\uC785\uC220\uC744 \uAE68\uBB38\uB2E4\n" + "\uD488 \uC18D\uC5D0\uC11C \uBC15\uC950\uAC00 \uB0A0\uC544\uC624\uB978\uB2E4\t\uD55C\uCABD \uBC1C\uC744 \uC911\uC2EC\uC73C\uB85C \uBE59\uADF8\uB974\uB974 \uB3C8\uB2E4\t\uC8FC\uBCC0\uC5D0 \uC791\uAC8C \uC6D0\uB9DD\uD558\uB294 \uBAA9\uC18C\uB9AC\uAC00 \uC6B8\uB9B0\uB2E4\t\uB208\uC744 \uAC10\uACE0 \uACFC\uAC70\uB97C \uC0DD\uAC01\uD55C\uB2E4\t\uAC80\uC740 \uACE0\uC591\uC774\uAC00 \uBC1C\uBC11\uC5D0 \uC7AC\uB871\uBD80\uB9AC\uBA70 \uB2EC\uB77C\uBD99\uB294\uB2E4\t\uAC00\uC2B4\uC744 \uB204\uB974\uACE0 \uC9C0\uADF8\uC2DC \uC0DD\uAC01\uD55C\uB2E4\n" + "\uBA38\uB9AC \uC704\uB97C \uBC15\uC950\uAC00 \uC18C\uC6A9\uB3CC\uC774 \uCE58\uB4EF\uC774 \uB09C\uB2E4\t\uAF43\uC78E\uC744 \uAD6C\uD604\uD654\uD574 \uD769\uB0A0\uB9B0\uB2E4\t\uBE44\uB09C\uD558\uB294 \uB4EF\uD55C \uB208\uBE5B\uC744 \uD5A5\uD55C\uB2E4\t\uBC1C\uC790\uCDE8\uC5D0 \uC605\uC740 \uC548\uAC1C\uAC00 \uB080\uB2E4\t\uC8FC\uBCC0\uC5D0 \uC694\uC815\uC758 \uBE5B\uC774 \uCDA4\uCD98\uB2E4\t\uACE0\uAC1C\uB97C \uD06C\uAC8C \uD754\uB4E4\uC5B4 \uC0AC\uB150\uC744 \uCAD3\uB294\uB2E4\n" + "\uB208\uC379\uC744 \uCC0C\uD478\uB9AC\uB294 \uB3D9\uC2DC\uC5D0 \uB208\uC774 \uBD89\uAC8C \uBE5B\uB09C\uB2E4\t\uC758\uC0C1\uC774\uB098 \uAC11\uC637\uC758 \uC0C9\uC774\uB098 \uC7A5\uC2DD\uC744 \uBC14\uAFBC\uB2E4\t\uC9C1\uB9BD\uBD80\uB3D9\uC758 \uC790\uC138\uB85C \uC11C\uC788\uB294\uB2E4\t\uC4F4\uC6C3\uC74C\uC744 \uC9C0\uC73C\uBA70 \uB2E4\uAC00\uC120\uB2E4\t\uC21C\uC2DD\uAC04\uC5D0 \uC0C1\uB300\uD3B8\uC5D0 \uB098\uD0C0\uB09C\uB2E4\t\uB9C8\uC74C \uC18D\uC758 \uBD84\uB178\uB85C \uD5D8\uC545\uD55C \uC5BC\uAD74\uC774 \uB41C\uB2E4\n" + "\uC190\uC5D0 \uC788\uB294 \uC640\uC778\uC744 \uAC00\uBCCD\uAC8C \uB9C8\uC2E0\uB2E4\t\uC790\uC2E0\uC5D0\uAC8C \uCDE8\uD574 \uB208\uC744 \uAC10\uB294\uB2E4\t\uC9C8\uB9B0\uB4EF\uD55C \uBAA8\uC2B5\uC73C\uB85C \uD55C\uC228\uC744 \uC270\uB2E4\t\uD604\uC0C1\uC744 \uBD84\uC11D\uD558\uB294 \uD63C\uC7A3\uB9D0\uC744 \uD55C\uB2E4\t\uC21C\uC2DD\uAC04\uC5D0 \uC0C1\uB300\uC5D0\uAC8C\uC11C \uBA40\uC5B4\uC9C4\uB2E4\t\uC758\uC5F0\uD55C \uD0DC\uB3C4\uB85C \uB9DE\uC120\uB2E4\n" + "\uBAB8 \uC804\uCCB4\uC5D0\uC11C \uC605\uC740 \uBD89\uC740 \uC0C9\uC758 \uC624\uC624\uB77C\uAC00 \uD53C\uC5B4\uB09C\uB2E4\t\uAD6C\uD604\uD654\uD55C \uAF43\uC744 \uC190\uC5D0\uC11C \uAC00\uC9C0\uACE0 \uB17C\uB2E4\t\uAC11\uC790\uAE30 \uB3CC\uC544\uC11C\uBA70 \uB178\uB824\uBCF8\uB2E4\t\uD765\uBBF8\uAE4A\uC740\uB4EF\uC774 \uC9C8\uBB38\uD55C\uB2E4\t\uBC8C\uB808\uB098 \uC2DD\uBB3C\uC5D0\uAC8C \uC815\uC2E0\uC774 \uD314\uB9B0\uB2E4\t\uB9C8\uB978 \uC6C3\uC74C\uC18C\uB9AC\uB97C \uD758\uB9B0\uB2E4\n" + "\uAC81 \uC5C6\uB294 \uC6C3\uC74C\uC744 \uC9D3\uB294\uB2E4\t\uB9C8\uC74C\uC5D0 \uB4DC\uB294 \uC0C1\uB300\uB97C \uAF2C\uC2DC\uB824\uACE0 \uD55C\uB2E4\t\uC8FC\uBCC0\uC758 \uACF5\uAE30\uAC00 \uC5BC\uC5B4\uBD99\uB294\uB2E4\t\uB208 \uC55E\uC758 \uC591\uC2DD\uC5D0 \uBD88\uD3C9\uC744 \uB9D0\uD55C\uB2E4\t\uC21C\uC218\uD55C \uC6C3\uC74C\uC744 \uBCF4\uC778\uB2E4\t\uC790\uC2E0\uC758 \uD608\uC871\uC744 \uAE4E\uC544\uB0B4\uB9AC\uB294 \uB9D0\uC744 \uD55C\uB2E4\n" + "\uBC14\uB78C \uC5C6\uC774 \uBA38\uB9AC\uCE74\uB77D\uC774 \uB0A0\uB9B0\uB2E4\t\uC5B4\uAE68\uB97C \uC6C0\uCE20\uB9B0\uB2E4\t\uAC00\uC2B4\uC5D0 \uC190\uC744 \uC5B9\uACE0 \uC790\uC2E0\uC744 \uC548\uC815\uC2DC\uD0A8\uB2E4\t\uBB34\uAC10\uB3D9\uD558\uAC8C \uAC00\uBCCD\uAC8C \uC778\uC0AC\uD55C\uB2E4\t\uC2E4\uC218\uB85C \uB204\uAD70\uAC00\uB97C \uB9D0\uB824\uB4E4\uAC8C\uD574\uC11C \uB118\uC5B4\uC9C4\uB2E4\t\uC870\uC6A9\uD55C \uBD84\uB178\uC640 \uD568\uAED8 \uB208\uC774 \uCC3D\uBC31\uD558\uAC8C \uBE5B\uB09C\uB2E4\n" + "\uC9C8\uB9B0 \uB208\uC73C\uB85C \uC0C1\uB300\uB97C \uC751\uC2DC\uD55C\uB2E4\t\uC790\uC2E0\uC758 \uBB34\uAE30\uC5D0 \uC785\uB9DE\uCDA4\uC744 \uD55C\uB2E4\t\uC190\uC5D0 \uAD6C\uD604\uD654\uD55C \uC0AC\uC2AC\uC744 \uAC00\uC9C0\uACE0 \uB17C\uB2E4\t\uC190\uC5D0 \uAD6C\uD604\uD654\uD55C \uD39C\uC744 \uAC00\uC9C0\uACE0 \uB17C\uB2E4\t\uB204\uAD70\uAC00\uC5D0\uAC8C \uC751\uC11D\uBD80\uB9AC\uB4EF\uC774 \uAE30\uB304\uB2E4\t\uB4E4\uAF43\uC744 \uB9CC\uC9C0\uACE0 \uADF8\uAC83\uC744 \uC2DC\uB4E4\uAC8C \uD55C\uB2E4\n" + "\uBC1C\uBC11\uC5D0 \uC791\uC740 \uD68C\uC624\uB9AC\uBC14\uB78C\uC774 \uC77C\uC5B4\uB09C\uB2E4\t\uAD8C\uC720\uD558\uB294 \uB4EF\uC774 \uB204\uAD70\uAC00\uC758 \uC190\uC744 \uC7A1\uB294\uB2E4\t\uC8FC\uBCC0\uC744 \uC5C4\uACA9\uD55C \uB208\uC73C\uB85C \uBC14\uB77C\uBCF8\uB2E4\t\uB208\uC744 \uB728\uACE0 \uAC10\uD0C4\uD55C\uB2E4\t\uC6C3\uC74C\uC744 \uB760\uBA70 \uACE0\uAC1C\uB97C \uB044\uB355\uC778\uB2E4\t\uC9C0\uCE5C \uBAA8\uC2B5\uC73C\uB85C \uD76C\uBBF8\uD558\uAC8C \uBE5B\uB098\uB294 \uC228\uC744 \uB0B4\uBC49\uB294\uB2E4\n" + "\uACA9\uC815\uC774\uB098 \uAE34\uC7A5\uAC10\uC5D0 \uBA38\uB9AC\uAC00 \uAC70\uAFB8\uB85C \uC120\uB2E4\t\uC545\uAE30\uB97C \uAD6C\uD604\uD654\uD574 \uC5F0\uC8FC\uD55C\uB2E4\t\uB3D9\uB8CC\uC5D0\uAC8C \uC758\uC2EC\uC758 \uC2DC\uC120\uC744 \uBCF4\uB0B8\uB2E4\t\uCC45, \uC18C\uB9E4, \uB9DD\uD1A0 \uB4F1\uC73C\uB85C \uC785\uAC00\uB97C \uAC00\uB9B0\uB2E4\t\uC791\uAC8C \uACE0\uAC1C\uB97C \uAC38\uC6C3\uAC70\uB9B0\uB2E4\t\uC790\uC2E0\uC758 \uBB38\uC7A5\uC744 \uBA4D\uD558\uAC8C \uBC14\uB77C\uBCF8\uB2E4\n" + "\uBD89\uC740 \uB2EC\uBE5B\uC744 \uBC1B\uC73C\uBA70 \uB208\uC744 \uAC10\uB294\uB2E4\t\uC0C1\uB300\uC5D0\uAC8C \uC719\uD06C\uD55C\uB2E4\t\uAC10\uC815\uC5D0 \uB9DE\uCDB0 \uC8FC\uBCC0\uC5D0 \uC0AC\uC2AC\uC774 \uAD6C\uD604\uD654\uB41C\uB2E4\t\uACF5\uC911\uC5D0 \uB5A0\uC11C \uBBF8\uB044\uB7EC\uC9C0\uB4EF\uC774 \uB098\uC544\uAC04\uB2E4\t\uC218\uB9CE\uC740 \uAC80\uC740 \uAE43\uD138\uC774 \uD558\uB298\uC5D0 \uD769\uB0A0\uB9B0\uB2E4\t\uC790\uC870\uC801\uC73C\uB85C \uC791\uAC8C \uC6C3\uB294\uB2E4\n" + "\uBB34\uAE30\uB97C \uB4E4\uACE0 \uB9F9\uC138\uB97C \uC120\uCC3D\uD55C\uB2E4\t\uC758\uC0C1\uC5D0 \uBD99\uC740 \uBA3C\uC9C0\uB97C \uD138\uC5B4\uB0B8\uB2E4\t\uD0C0\uB77D\uC5D0 \uB300\uD574 \uCDA9\uACE0\uD55C\uB2E4\t\uBB34\uAC10\uC815\uD558\uAC8C \uC0C1\uD669\uC744 \uBD84\uC11D\uD55C\uB2E4\t\uACFC\uC77C\uC744 \uAEBC\uB0B4\uC11C \uBA39\uB294\uB2E4\t\uC9C0\uCE5C \uB208\uC73C\uB85C \uBA4D\uD558\uAC8C \uB2E4\uB978 \uC0AC\uB78C\uC744 \uBCF8\uB2E4\n" + "\uC790\uC2E0\uC758 \uBB38\uC7A5\uC744 \uCB49 \uBC14\uB77C\uBCF8\uB2E4\t\uB9DD\uD1A0\uC5D0\uC11C \uBB34\uC218\uD55C \uB098\uBE44\uAC00 \uB0A0\uC544\uC624\uB978\uB2E4\t\uCC28\uAC00\uC6B4 \uC2DC\uC120\uC73C\uB85C \uC0C1\uB300\uB97C \uD6D1\uC5B4\uBCF8\uB2E4\t\uC21C\uAC04, \uBAA8\uC2B5\uC774 \uC548\uAC1C\uC5D0 \uD729\uC2F8\uC5EC \uD76C\uBBF8\uD574\uC9C4\uB2E4\t\uBB54\uAC00 \uC788\uC5B4 \uBCF4\uC774\uB294 \uB9D0\uC774\uB098 \uD589\uB3D9\uC744 \uD55C\uB2E4\t\uBB54\uAC00 \uACB0\uC2EC\uD55C\uB4EF\uD55C\uB4EF\uC774 \uC5BC\uAD74\uC744 \uB4E4\uC5B4\uC62C\uB9B0\uB2E4\n" + "\uC0C1\uB300\uC758 \uB208\uC744 \uB4E4\uC5EC\uB2E4 \uBD10 \uB9C8\uC74C\uC744 \uC9D0\uC791\uD55C\uB2E4\t\uC8FC\uAD70\uC758 \uC606\uC5D0 \uC0B4\uC9DD \uB2E4\uAC00\uC120\uB2E4\t\uC77C\uC804\uC758 \uC2F8\uC6C0\uC5D0 \uB300\uD574 \uC598\uAE30\uD55C\uB2E4\t\uC0C1\uB300\uB97C \uD5E4\uC544\uB9AC\uB4EF\uC774 \uBC14\uB77C\uBCF8\uB2E4\t\u201C\uC801\u201D\uC744 \uC0DD\uAC01\uD574\uB0B4 \uD5D8\uC545\uD55C \uB208\uC774 \uB41C\uB2E4\t\uC9D0\uC2B9\uACFC \uAC19\uC774 \uAC70\uCE60\uAC8C \uD638\uD761\uD55C\uB2E4\n" + "\uC790\uC2E0\uC758 \uC601\uC9C0\uB97C \uC0DD\uAC01\uD55C\uB2E4\t\uBB38\uC7A5\uC774 \uC0C8\uACA8\uC9C4 \uBC29\uD328\uB97C \uB4E4\uC5B4 \uC62C\uB9B0\uB2E4\t\uBC14\uB78C\uC5D0 \uBA38\uB9AC\uCE74\uB77D\uC774 \uB098\uBD80\uB080\uB2E4\t\uC548\uACBD\uC744 \uAD6C\uD604\uD654\uD574 \uC4F4\uB2E4\t\uCE68\uC744 \uBC49\uB294\uB2E4\t\uADF8\uB801\uADF8\uB801\uD55C \uB208\uC73C\uB85C \uC0C1\uB300\uB97C \uC62C\uB824\uB2E4\uBCF8\uB2E4\n" + "\uC885\uC790\uB97C \uC2DC\uC911\uB4E4\uAC8C \uD55C\uB2E4\t\uBB34\uAE30\uB97C \uCC28\uACE0 \uAE30\uD488\uC788\uAC8C \uC778\uC0AC\uD55C\uB2E4\t\uAD6C\uD604\uD654\uD55C \uD0C8\uAC83\uC744 \uC4F0\uB2E4\uB4EC\uB294\uB2E4\t\uC870\uADF8\uB9C8\uD55C \uC810\uC744 \uC8FC\uC758\uAE4A\uAC8C \uBCF8\uB2E4\t\uAD6C\uD604\uD654\uD55C \uBB34\uAE30\uB97C \uC4F0\uB2E4\uB4EC\uB294\uB2E4\t\uACE0\uAC1C\uB97C \uC219\uC774\uACE0 \uC2EC\uD638\uD761\uD55C\uB2E4\n" + "\uC885\uC790\uC758 \uC2DC\uC911\uC744 \uBC1B\uB294\uB2E4\t\uC790\uC2E0\uC758 \uBC29\uD328\uC758 \uBB38\uC7A5\uC744 \uC190\uAC00\uB77D\uC73C\uB85C \uB530\uB77C\uADF8\uB9B0\uB2E4\t\uB3D9\uB8CC\uC758 \uC5B4\uAE68\uB97C \uB450\uB4DC\uB9B0\uB2E4, \uD639\uC740 \uC548\uB294\uB2E4\t\uACFC\uC7A5\uB418\uAC8C \uD55C\uC228\uC744 \uC26C\uC5B4\uBCF4\uC778\uB2E4\t\uC74C\uC6B8\uD55C \uB208\uC73C\uB85C \uD5C8\uACF5\uC744 \uB178\uB824\uBCF8\uB2E4\t\uBCBD\uC774\uB098 \uBC14\uB2E5\uC5D0 \uC190\uD1B1\uC744 \uC138\uC6CC \uD560\uD038\uB2E4\n" + "\uB9C8\uC74C\uC5D0 \uB4DC\uB294 \uC0C1\uB300\uC5D0\uAC8C \uC190\uC9D3\uD55C\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC5D0\uAC8C \uBC14\uC2F9 \uB2E4\uAC00\uAC04\uB2E4\t\uC0C1\uCF8C\uD558\uAC8C \uC6C3\uB294\uB2E4\t\uB208\uC744 \uAC10\uACE0 \uC0AC\uC0C9\uC5D0 \uC7A0\uAE34\uB2E4\t\uC637\uC790\uB77D\uC5D0\uC11C \uB098\uD0C0\uB09C \uBC40\uC774\uB098 \uAC70\uBBF8\uB97C \uC4F0\uB2E4\uB4EC\uB294\uB2E4\t\uC790\uC2E0\uC5D0\uAC8C \uC774\uB974\uB294 \uD63C\uC7A3\uB9D0\uC744 \uD55C\uB2E4\n" + "\uADFC\uC2EC\uC5D0 \uAC00\uB4DD\uCC28 \uC0DD\uAC01\uC5D0 \uC7A0\uAE34\uB2E4\t\uC8FC\uAD70\uC758 \uB4F1\uB4A4\uC5D0\uC11C \uC0C1\uB300\uB97C \uB178\uB824\uBCF8\uB2E4\t\uC18C\uB9AC \uB192\uC5EC \uC774\uB984\uC744 \uB304\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC5D0\uAC8C \uC870\uC5B8\uD55C\uB2E4\t\uACE8\uB618\uD788 \uC0DD\uAC01\uD558\uB294 \uB208\uC73C\uB85C \uBC24\uD558\uB298\uC744 \uBCF8\uB2E4\t\uD0C0\uB77D\uC758 \uC804\uC870\uB97C \uC9C0\uADF8\uC2DC \uBCF8\uB2E4\n" + "\uBB34\uAC81\uAC8C \uB044\uB355\uC778\uB2E4\t\uC8FC\uAD70\uC758 \uC55E, \uB610\uB294 \uC606\uC5D0\uC11C \uBB34\uB98E\uAFC7\uB294\uB2E4\t\uC8FC\uBCC0\uC5D0 \uC801\uADF9\uC801\uC73C\uB85C \uB9D0\uC744 \uAC74\uB2E4\t\uC5BC\uBC84\uBB34\uB9AC\uB4EF\uC774 \uD5DB\uAE30\uCE68\uC744 \uD55C\uB2E4\t\uC790\uC2E0\uC758 \uBB34\uAE30\uB97C \uD565\uB294\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC5D0\uAC8C\uC11C \uB208\uC744 \uB3CC\uB9B0\uB2E4\n" + "\uC0C1\uB0E5\uD55C \uBBF8\uC18C\uB97C \uC9D3\uB294\uB2E4\t\uACB8\uC5F0\uCA4D\uB2E4\uB294\uB4EF \uC5BC\uAD74\uC744 \uBD89\uD78C\uB2E4\t\uC790\uC2E0\uC758 \uC774\uB984\uC5D0 \uB9F9\uC138\uD55C\uB2E4\t\uC791\uAC8C \uC778\uC0AC\uD55C\uB2E4\t\uC5B4\uB461\uAC8C \uC6C3\uC74C\uC9D3\uB294\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC758 \uB208\uCE58\uB97C \uC0B4\uD540\uB2E4\n" + "\uC2AC\uCA4D \uC790\uC2E0\uC758 \uBB38\uC7A5\uC744 \uBCF4\uC5EC\uC900\uB2E4\t\uB204\uAD70\uAC00\uC758 \uC55E\uC744 \uAC00\uB85C\uB9C9\uACE0 \uC120\uB2E4\t\uACFC\uC7A5\uB418\uAC8C \uB204\uAD70\uAC00\uB97C \uCE58\uCF1C\uC138\uC6B4\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC5D0\uAC8C \uB208\uC73C\uB85C \uC2E0\uD638\uB97C \uBCF4\uB0B8\uB2E4\t\uADF8\uB298\uC5D0 \uC228\uB294\uB2E4\t\uC0C1\uB300\uB97C \uB178\uB824\uBCF4\uBA70 \uC2E0\uC74C\uD55C\uB2E4\n" + "\uC640\uC778\uC794\uC744 \uB2E4\uB978 \uAE30\uC0AC\uC5D0\uAC8C \uAC74\uB128\uB2E4\t\uC815\uC2E0\uC0AC\uB0A9\uAC8C \uB3CC\uC544\uB2E4\uB2CC\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC5D0\uAC8C \uC2DC\uD569\uC744 \uC2E0\uCCAD\uD55C\uB2E4\t\uBD88\uAC00\uC0AC\uC758\uD55C \uC6C3\uC74C\uC744 \uC9D3\uB294\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC758 \uBB38\uC7A5\uC744 \uAD00\uCC30\uD55C\uB2E4\t\uC790\uC2E0\uC758 \uC190\uAC00\uB77D\uC744 \uAC00\uBCCD\uAC8C \uD565\uB294\uB2E4\n" + "\uAC00\uB9CC\uD788 \uD48D\uACBD\uC744 \uBC14\uB77C\uBCF8\uB2E4\t\uC218\uC90D\uC740 \uC6C3\uC74C\uC744 \uC9D3\uB294\uB2E4\t\uB9DD\uD1A0\uB97C \uACFC\uC7A5\uB418\uAC8C \uD384\uB7ED\uC778\uB2E4\t\uD558\uB298\uC5D0 \uB72C \uBCC4\uB4E4\uC744 \uBC14\uB77C\uBCF8\uB2E4\t\uBD84\uC704\uAE30\uB97C \uBABB\uC77D\uB294 \uBC1C\uC5B8\uC744 \uD55C\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC5D0\uAC8C \uAC70\uB9AC\uB97C \uB450\uC5B4\uC9C4\uB2E4\n" + "\uC190\uBC14\uB2E5\uC5D0 \uCCB4\uC2A4\uB9D0\uC744 \uAD6C\uD604\uD654\uD55C\uB2E4\t\uAE34\uC7A5\uD55C \uC2DC\uC120\uC73C\uB85C \uC8FC\uBCC0\uC744 \uB458\uB7EC\uBCF8\uB2E4\t\uC0C1\uB300\uB97C \uCE58\uCF1C \uC138\uC6B0\uBA70 \uC785\uB9DE\uCDA4\uC744 \uC694\uAD6C\uD55C\uB2E4\t\uAE4A\uC740 \uC9C0\uC2DD\uC73C\uB85C \uC790\uC138\uD55C \uC124\uBA85\uC744 \uD55C\uB2E4\t\uAC11\uC790\uAE30 \uB4A4\uB3CC\uC544\uBCF4\uBA70 \uB4F1\uB4A4\uB97C \uACBD\uACC4\uD55C\uB2E4\t\uC601\uC545\uD55C \uC6C3\uC74C\uC744 \uC9D3\uB294\uB2E4\n" + "\uAC00\uC2B4\uC744 \uD3B4\uACE0 \uC790\uC2E0\uC788\uAC8C \uBC1C\uC5B8\uD55C\uB2E4\t\uB9C8\uC74C \uC18D\uC5D0\uC11C \uB2E4\uB978 \uAE30\uC0AC\uC640 \uC2DC\uD569\uC744 \uD55C\uB2E4\t\uC790\uC2E0\uC758 \uACE0\uD5A5\uC744 \uB5A0\uC62C\uB9B0\uB2E4\t\uBBF8\uB798\uC5D0 \uB300\uD574 \uC810\uCCD0\uBCF8\uB2E4\t\uACFC\uAC70\uC758 \uC6D0\uD1B5\uD568\uC5D0 \uD53C\uB208\uBB3C\uC744 \uD758\uB9B0\uB2E4\t\uC790\uC2E0\uC758 \uD53C\uBD80\uB97C \uC190\uD1B1\uB4F1\uC73C\uB85C \uC0C1\uCC98\uC785\uD78C\uB2E4\n" + "\uBE60\uB974\uAC8C \uC0AC\uC8C4\uD55C\uB2E4\t\uAC00\uB9CC\uD788 \uAE30\uB2E4\uB9AC\uACE0 \uC788\uB294\uB2E4\t\uC790\uC2E0\uC758 \uBB38\uC7A5\uC5D0 \uB300\uD574 \uC598\uAE30\uD55C\uB2E4\t\uC0AC\uC18C\uD55C \uC608\uC5B8\uC744 \uD55C\uB2E4\t\uC0C1\uC5B4\uC640 \uAC19\uC774 \uC6C3\uB294\uB2E4\t\uBAB0\uB798 \uC785\uB9DB\uC744 \uB2E4\uC2E0\uB2E4\n" + "\uB2E4\uB978 \uAE30\uC0AC\uB97C \uC815\uBA74\uC5D0\uC11C \uCE6D\uCC2C\uD55C\uB2E4\t\uC8FC\uAD70\uC744 \uC9C0\uADF8\uC2DC \uBC14\uB77C\uBCF8\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC640 \uC7A1\uB2F4\uC744 \uD55C\uB2E4\t\uC18C\uBB38\uC758 \uC77C\uC885\uC744 \uB2E4\uB978 \uAE30\uC0AC\uC5D0\uAC8C \uC18D\uC0AD\uC778\uB2E4\t\uADF8 \uC790\uB9AC\uC5D0 \uC5C6\uB294 \uAE30\uC0AC\uB97C \uBE44\uC6C3\uB294\uB2E4\t\uC694\uC5FC\uD558\uAC8C \uACC1\uB208\uC9C8\uC744 \uBCF4\uB0B8\uB2E4\n" + "\uB2E4\uB978 \uAE30\uC0AC\uC758 \uBA38\uB9AC\uB098 \uBCFC\uC744 \uC4F0\uB2E4\uB4EC\uB294\uB2E4\t\uC8FC\uAD70\uC744 \uCE58\uCF1C \uC138\uC6B4\uB2E4\t\uACE4\uB780\uD55C\uB4EF\uC774 \uC791\uAC8C \uC2E0\uC74C\uD55C\uB2E4\t\uC0AC\uC18C\uD55C \uBB3C\uAC74\uC744 \uD765\uBBF8\uAE4A\uAC8C \uAD00\uCC30\uD55C\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC640\uC758 \uAC70\uB9AC\uB97C \uB290\uB080\uB2E4\t\uC560\uCC98\uB85C\uC6B4 \uB208\uC73C\uB85C \uC790\uC2E0\uC758 \uBB38\uC7A5\uC744 \uBC14\uB77C\uBCF8\uB2E4\n" + "\uC6B0\uB801\uCC28\uAC8C \uC774\uB984\uC744 \uB304\uB2E4\t\uC8FC\uAD70\uC758 \uC18C\uB9E4\uB97C \uAF49 \uC954\uB2E4\t\uC717\uC0AC\uB78C\uC758 \uC55E\uC5D0\uC11C \uBB34\uB98E\uC744 \uAFC7\uACE0 \uC608\uB97C \uB2E4\uD55C\uB2E4\t\uB2EC\uC744 \uC62C\uB824\uB2E4\uBCF4\uACE0 \uB4DC\uB77C\uCFE8\uC744 \uCE6D\uC1A1\uD55C\uB2E4\t\uB098\uC9C1\uD558\uAC8C \uC774\uB984\uC744 \uB304\uB2E4\t\uC0AC\uB0E5\uAC10\uC744 \uB178\uB9AC\uB294 \uB208\uC73C\uB85C \uB2E4\uB978 \uAE30\uC0AC\uB97C \uBCF8\uB2E4\n" + "\uC785\uAC00\uB97C \uAC00\uB9AC\uBA70 \uAE30\uD488\uC788\uAC8C \uC6C3\uB294\uB2E4\t\uC8FC\uAD70\uC5D0 \uB300\uD55C \uC8FC\uBCC0\uC758 \uD0DC\uB3C4\uB97C \uBE44\uB09C\uD55C\uB2E4\t\uC544\uB7AB\uC0AC\uB78C\uC5D0\uAC8C \uBBF8\uC18C\uC9D3\uB294\uB2E4\t\uB2E4\uB978 \uAE30\uC0AC\uC758 \uAC10\uC815\uC5D0 \uCDA9\uACE0\uD55C\uB2E4\t\uC544\uB7AB\uC0AC\uB78C\uC744 \uB0B4\uB824\uB2E4\uBCF4\uB294 \uB208\uC73C\uB85C \uBCF8\uB2E4\t\uC790\uD559\uC801\uC778 \uB9D0\uC744 \uD55C\uB2E4\n";
      return text.$split(/\n/);
    }, $Dracurouge_Korean_getReactionTable$18.$$arity = 0);
    
    Opal.def(self, '$getCorruptionResult', $Dracurouge_Korean_getCorruptionResult$19 = function $$getCorruptionResult(command) {
      var $a, $b, self = this, modify = nil, name = nil, table = nil, number = nil, number_text = nil, index = nil, text = nil;

      
      if ($truthy(/^CT(\d+)$/['$==='](command.$upcase()))) {
      } else {
        return nil
      };
      modify = $$($nesting, 'Regexp').$last_match(1).$to_i();
      name = "\uD0C0\uB77D\uD45C";
      table = [[0, "\uB2F9\uC2E0\uC740 \uC644\uC804\uD788 \uD0C0\uB77D\uD588\uB2E4. \uC774 \uC2DC\uC810\uC5D0\uC11C \uB2F9\uC2E0\uC740 [\uC6D4 \uD50C\uB77C\uC6CC]\uAC00 \uB418\uC5B4 \uB291\uB300\uC778\uAC04, \uAC80\uC740 \uC0B0\uC591, \uC57C\uC218 \uC911 \uD558\uB098\uAC00 \uB41C\uB2E4. \uADF8 [\uB9C9]\uC758 \uC885\uB8CC \uD6C4\uC5D0 \uC138\uC158\uC5D0\uC11C \uD1F4\uC7A5\uD55C\uB2E4. 247\uD398\uC774\uC9C0\uC758 \u300C\uC18C\uBA78\u30FB\uC644\uC804\uD55C \uD0C0\uB77D\u300D\uC744 \uCC38\uC870\uD55C\uB2E4."], [1, "\uB2F9\uC2E0\uC758 \uC721\uCCB4\uB294 \uC815\uC2E0\uC5D0 \uAC78\uB9DE\uB294 \uBCC0\uD654\uB97C \uC77C\uC73C\uD0A8\uB2E4\u2026\u2026. \u300C\uD0C0\uB77D\uC758 \uC804\uC870\uD45C\u300D\uB97C 2\uBC88 \uAD74\uB9AC\uACE0 \uD2B9\uC9D5\uC744 \uC5BB\uB294\uB2E4. \uC774 \uC138\uC158 \uC885\uB8CC \uD6C4, \u3010\uAE38\u3011\uC744 \u300C\uC57C\uC218\u300D\uB85C \uBCC0\uACBD\uD55C\uB2E4.(\uC774\uBBF8\u300C\uC57C\uC218\u300D\uB77C\uBA74 \u3010\uAE38\u3011\uC740 \uBCC0\uD558\uC9C0 \uC54A\uB294\uB2E4)"], [3, "\uB2F9\uC2E0\uC758 \uC721\uCCB4\uB294 \uC815\uC2E0\uC5D0 \uAC78\uB9DE\uB294 \uBCC0\uD654\uB97C \uC77C\uC73C\uD0A8\uB2E4\u2026\u2026. \u300C\uD0C0\uB77D\uC758 \uC804\uC870\uD45C\u300D\uB97C 1\uBC88 \uAD74\uB9AC\uACE0 \uD2B9\uC9D5\uC744 \uC5BB\uB294\uB2E4. \uC774 \uC138\uC158 \uC885\uB8CC \uD6C4, \u3010\uAE38\u3011\uC744 \u300C\uC57C\uC218\u300D\uB85C \uBCC0\uACBD\uD55C\uB2E4.(\uC774\uBBF8\u300C\uC57C\uC218\u300D\uB77C\uBA74 \u3010\uAE38\u3011\uC740 \uBCC0\uD558\uC9C0 \uC54A\uB294\uB2E4)"], [5, "\uACE0\uADC0\uD55C \uB9C8\uC74C\uB3C4 \uC5B8\uC820\uAC00\uB294 \uD0C0\uB77D\uD55C\uB2E4. \uB2F9\uC2E0\uC774 \uC9C0\uAE08 \uAC00\uC7A5 \uB9CE\uC740 \uB8E8\uC8FC\uB97C \uC5BB\uC740 \uB300\uC0C1\uC5D0 \uB300\uD55C \uB8E8\uC8FC\uB97C \uC804\uBD80 \uC783\uACE0, \uAC19\uC740 \uC218 \uB9CC\uD07C\uC758 \uB204\uC544\uB974\uB97C \uC5BB\uB294\uB2E4. \uB204\uC544\uB974\uB97C \uC5BB\uC740 \uACB0\uACFC, \u3010\uAC08\uC99D\u3011\uC774 3\uC810 \uC774\uC0C1\uC774 \uB41C \uACBD\uC6B0 \uB2E4\uC2DC \uD0C0\uB77D\uD45C\uB97C \uAD74\uB9B0\uB2E4."], [6, "\uB0B4\uBA74\uC5D0 \uC7A0\uB4E0 \uC9D0\uC2B9\uC758 \uC228\uACB0\u2026\u2026\uB2F9\uC2E0\uC774 \uC9C0\uAE08 \u3010\uAC08\uC99D\u3011\uC744 \uC5BB\uC740 \uB204\uC544\uB974\uC758 \uB300\uC0C1\uC5D0\uAC8C \uC784\uC758\uC758 \uB204\uC544\uB974 2\uC810\uC744 \uD68D\uB4DD\uD55C\uB2E4."], [7, "\uB0B4\uBA74\uC5D0 \uC7A0\uB4E0 \uC9D0\uC2B9\uC758 \uC228\uACB0\u2026\u2026\uB2F9\uC2E0\uC774 \uC9C0\uAE08 \u3010\uAC08\uC99D\u3011\uC744 \uC5BB\uC740 \uB204\uC544\uB974\uC758 \uB300\uC0C1\uC5D0\uAC8C \uC784\uC758\uC758 \uB204\uC544\uB974 1\uC810\uC744 \uD68D\uB4DD\uD55C\uB2E4."], [8, "\uB0A0\uB6F0\uB294 \uB9C8\uC74C\uC744 \uAC00\uB77C\uC549\uD78C\uB2E4\u2026\u2026\uB2E4\uD589\uD788 \uC544\uBB34 \uC77C\uB3C4 \uC5C6\uC5C8\uB2E4."], [99, "\uB2F9\uC2E0\uC740 \uBBF8\uCCD0 \uB0A0\uB6F0\uB294 \uAC10\uC815\uC744 \uC5B5\uB204\uB974\uACE0 \uC774\uC131\uC744 \uB418\uCC3E\uC558\uB2E4! \u3010\uAC08\uC99D\u3011\uC774 1 \uAC10\uC18C\uD55C\uB2E4!"]];
      $b = self.$roll(2, 6), $a = Opal.to_ary($b), (number = ($a[0] == null ? nil : $a[0])), (number_text = ($a[1] == null ? nil : $a[1])), $b;
      index = $rb_minus(number, modify);
      self.$debug("index", index);
      text = self.$get_table_by_number(index, table);
      return "" + "2D6[" + (number_text) + "]-" + (modify) + " \uFF1E  " + (name) + "(" + (index) + ") \uFF1E " + (text);
    }, $Dracurouge_Korean_getCorruptionResult$19.$$arity = 1);
    
    Opal.def(self, '$getTableResult', $Dracurouge_Korean_getTableResult$20 = function $$getTableResult(command) {
      var $a, $b, self = this, info = nil, name = nil, type = nil, table = nil, $case = nil, text = nil, number = nil;

      
      info = $$($nesting, 'TABLES')['$[]'](command.$upcase());
      if ($truthy(info['$nil?']())) {
        return nil};
      name = info['$[]']("name");
      type = info['$[]']("type");
      table = info['$[]']("table");
      $b = (function() {$case = type;
      if ("2D6"['$===']($case)) {return self.$get_table_by_2d6(table)}
      else if ("1D6"['$===']($case)) {return self.$get_table_by_1d6(table)}
      else { return nil }})(), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b;
      if ($truthy(text['$nil?']())) {
        return nil};
      return "" + (name) + "(" + (number) + ") \uFF1E " + (text);
    }, $Dracurouge_Korean_getTableResult$20.$$arity = 1);
    
    Opal.def(self, '$getCorruptionTable', $Dracurouge_Korean_getCorruptionTable$21 = function $$getCorruptionTable() {
      var self = this;

      return nil
    }, $Dracurouge_Korean_getCorruptionTable$21.$$arity = 0);
    Opal.const_set($nesting[0], 'TABLES', $hash2(["CS", "BT"], {"CS": $hash2(["name", "type", "table"], {"name": "\uD0C0\uB77D\uC758 \uC804\uC870\uD45C", "type": "2D6", "table": ["\uB2F9\uC2E0\uC740 \uC644\uC804\uD788 \uD0C0\uB77D\uD588\uB2E4. \uC774 \uC2DC\uC810\uC5D0\uC11C \uB2F9\uC2E0\uC740 [\uC6D4 \uD50C\uB77C\uC6CC]\uAC00 \uB418\uC5B4 \uB291\uB300\uC778\uAC04, \uAC80\uC740 \uC0B0\uC591, \uC57C\uC218 \uC911 \uD558\uB098\uAC00 \uB41C\uB2E4. \uADF8 [\uB9C9]\uC758 \uC885\uB8CC \uD6C4\uC5D0 \uC138\uC158\uC5D0\uC11C \uD1F4\uC7A5\uD55C\uB2E4. 247\uD398\uC774\uC9C0\uC758 \u300C\uC18C\uBA78\u30FB\uC644\uC804\uD55C \uD0C0\uB77D\u300D\uC744 \uCC38\uC870\uD55C\uB2E4.", "\uC9D0\uC2B9 \uADF8 \uC790\uCCB4\uC758 \uBA38\uB9AC(\uB291\uB300, \uC0B0\uC591, \uBC15\uC950 \uC911 \uD558\uB098)", "\uBC24\uC0C8\uC758 \uB0A0\uAC1C", "\uBC15\uC950\uC758 \uB0A0\uAC1C", "\uAC08\uD034\uBC1C\uD1B1\uC774 \uC788\uB294 \uC774\uD615\uC758 \uD314", "\uB4A4\uD2C0\uB9B0 \uB450 \uAC1C\uC758 \uBFD4", "\uB291\uB300\uC758 \uADC0\uC640 \uAF2C\uB9AC", "\uCC3D\uBC31\uD574\uC9C4 \uD53C\uBD80", "\uC774\uC0C1\uD55C \uBE5B\uC744 \uBC1C\uD558\uB294 \uB208", "\uD280\uC5B4\uB098\uC628 \uC1A1\uACF3\uB2C8", "\uB208\uC5D0 \uBCF4\uC774\uB294 \uBCC0\uD654\uB294 \uC5C6\uB2E4\u2026\u2026"]}), "BT": $hash2(["name", "type", "table"], {"name": "\uC778\uC5F0 \uB0B4\uC6A9 \uACB0\uC815\uD45C\uFF1A\uB8E8\uC8FC\uFF0F\uB204\uC544\uB974", "type": "1D6", "table": ["\uC5F0\uBBFC(Pity)\u3000\uC0C1\uB300\uB97C \uBD88\uC30D\uD788 \uC5EC\uAE30\uACE0 \uB3D9\uC815\uD55C\uB2E4. \uFF0F\uBAA8\uBA78(Contempt)\u3000\uC0C1\uB300\uB97C \uAE54\uBCF4\uACE0 \uACBD\uBA78\uD55C\uB2E4.", "\uCE5C\uAD6C(Friend)\u3000\uC0C1\uB300\uC5D0\uAC8C \uC6B0\uC815\uC744 \uAC16\uB294\uB2E4. \uFF0F\uC9C8\uD22C(Jealousy)\u3000\uC0C1\uB300\uB97C \uBD80\uB7EC\uC6CC\uD558\uACE0 \uC9C8\uD22C\uD55C\uB2E4. ", "\uC2E0\uB8B0(Trust)\u3000\uC0C1\uB300\uB97C \uC2E0\uB8B0\uD55C\uB2E4. \uFF0F\uC695\uB9DD(Desire)\u3000\uC0C1\uB300\uB97C \uC6D0\uD558\uACE0 \uB098\uC758 \uAC83\uC73C\uB85C \uB9CC\uB4E4\uACE0 \uC2F6\uC5B4\uD55C\uB2E4.", "\uC0AC\uB791(Love)\u3000\uC0C1\uB300\uB97C \uC88B\uC544\uD558\uACE0 \uC0AC\uB791\uD55C\uB2E4. \uFF0F\uBD84\uB178(Anger)\u3000\uC0C1\uB300\uC5D0\uAC8C \uBD84\uB178\uB97C \uB290\uB080\uB2E4. ", "\uC874\uACBD(Respect)\u3000\uC0C1\uB300\uC758 \uC2E4\uB825\uC774\uB098 \uC815\uC2E0\uC744 \uC874\uACBD\uD55C\uB2E4. \uFF0F\uC0B4\uC758(Kill)\u3000\uC0C1\uB300\uC5D0\uAC8C \uC0B4\uC758\uB97C \uB290\uB07C\uACE0 \uC5C6\uC560\uACE0\uC790 \uD55C\uB2E4.", "\uBCF5\uC885(Obey)\u3000\uC0C1\uB300\uB97C \uC8FC\uAD70\uC73C\uB85C\uC11C \uBC1B\uB4E4\uACE0 \uCDA9\uC758\uB97C \uB9F9\uC138\uD55C\uB2E4. \uFF0F\uBCF5\uC218(Vendetta)\u3000\uC0C1\uB300\uB97C \uC6D0\uB9DD\uD558\uACE0 \uC6D0\uC218\uB85C \uC5EC\uAE34\uB2E4."]})}).$freeze());
    return self.$setPrefixes($rb_plus(["DR.*", "RT.*", "CT\\d+"], $$($nesting, 'TABLES').$keys()));
  })($nesting[0], $$($nesting, 'DiceBot'), $nesting)
})(Opal);
