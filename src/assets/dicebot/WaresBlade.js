/* Generated by Opal 1.0.3 */
(function(Opal) {
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;

  Opal.add_stubs(['$==', '$count', '$size', '$>=']);
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'WaresBlade');

    var $nesting = [self].concat($parent_nesting), $WaresBlade_check_nD10$1;

    
    Opal.const_set($nesting[0], 'ID', "WaresBlade");
    Opal.const_set($nesting[0], 'NAME', "\u30EF\u30FC\u30B9\u30D6\u30EC\u30A4\u30C9");
    Opal.const_set($nesting[0], 'SORT_KEY', "\u308F\u3042\u3059\u3075\u308C\u3044\u3068");
    Opal.const_set($nesting[0], 'HELP_MESSAGE', "nD10>=m \u65B9\u5F0F\u306E\u5224\u5B9A\u3067\u6210\u5426\u3001\u5B8C\u5168\u6210\u529F\u3001\u5B8C\u5168\u5931\u6557\u3092\u81EA\u52D5\u5224\u5B9A\u3057\u307E\u3059\u3002\n");
    return (Opal.def(self, '$check_nD10', $WaresBlade_check_nD10$1 = function $$check_nD10(total, _dice_total, dice_list, cmp_op, target) {
      var self = this;

      
      if (cmp_op['$=='](">=")) {
      } else {
        return ""
      };
      if (dice_list.$count(10)['$=='](dice_list.$size())) {
        return " \uFF1E \u5B8C\u5168\u6210\u529F"
      } else if (dice_list.$count(1)['$=='](dice_list.$size())) {
        return " \uFF1E \u7D76\u5BFE\u5931\u6557"
      } else if ($truthy($rb_ge(total, target))) {
        return " \uFF1E \u6210\u529F"
      } else {
        return " \uFF1E \u5931\u6557"
      };
    }, $WaresBlade_check_nD10$1.$$arity = 5), nil) && 'check_nD10';
  })($nesting[0], $$($nesting, 'DiceBot'), $nesting)
})(Opal);
