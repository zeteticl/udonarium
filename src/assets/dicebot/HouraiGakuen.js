/* Generated by Opal 1.0.3 */
(function(Opal) {
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  function $rb_gt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);
  }
  function $rb_lt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send;

  Opal.add_stubs(['$setPrefixes', '$===', '$getRollResult', '$getMedResult', '$getResResult', '$getInnyouResult', '$getHattokuResult', '$getGogyouResult', '$=~', '$to_i', '$last_match', '$roll', '$getCheckResult', '$sort', '$map', '$split', '$to_proc', '$isFamble', '$isCritical', '$<=', '$getTargetFromValue', '$+', '$-', '$getResistCheckResult', '$getResultRank', '$>', '$<', '$index', '$times', '$even?', '$<<', '$getOddEven', '$join', '$getGogyouTable', '$get_table_by_1d6']);
  return (function($base, $super, $parent_nesting) {
    var self = $klass($base, $super, 'HouraiGakuen');

    var $nesting = [self].concat($parent_nesting), $HouraiGakuen_rollDiceCommand$1, $HouraiGakuen_getRollResult$2, $HouraiGakuen_getCheckResult$3, $HouraiGakuen_isFamble$4, $HouraiGakuen_isCritical$5, $HouraiGakuen_getMedResult$6, $HouraiGakuen_getTargetFromValue$7, $HouraiGakuen_getResResult$8, $HouraiGakuen_getResistCheckResult$9, $HouraiGakuen_getResultRank$10, $HouraiGakuen_getInnyouResult$11, $HouraiGakuen_getHattokuResult$13, $HouraiGakuen_getOddEven$15, $HouraiGakuen_getGogyouResult$16, $HouraiGakuen_getGogyouTable$17;

    
    Opal.const_set($nesting[0], 'ID', "HouraiGakuen");
    Opal.const_set($nesting[0], 'NAME', "\u84EC\u83B1\u5B66\u5712\u306E\u5192\u967A!!");
    Opal.const_set($nesting[0], 'SORT_KEY', "\u307B\u3046\u3089\u3044\u304B\u304F\u3048\u3093\u306E\u307B\u3046\u3051\u3093");
    Opal.const_set($nesting[0], 'HELP_MESSAGE', "" + "\u30FB\u57FA\u672C\u30ED\u30FC\u30EB\uFF1AROL(x+n)\n" + "  ROLL(\u81EA\u5206\u306E\u80FD\u529B\u5024 + \u7C21\u5358\u5024 + \u5FDC\u77F3 or \u84EC\u83B1\u30D1\u30EF\u30FC)\u3068\u8A18\u8FF0\u3057\u307E\u3059\u30023D6\u3092\u30ED\u30FC\u30EB\u3057\u3001\u6210\u529F\u3057\u305F\u304B\u3069\u3046\u304B\u3092\u8868\u793A\u3057\u307E\u3059\u3002\n" + "  \u4F8B\uFF09ROL(4+6)\n" + "\u30FB\u5BFE\u4EBA\u5224\u5B9A\uFF1AMED(x,y)\n" + "  \u81EA\u5206\u306E\u80FD\u529B\u5024 x \u3068 \u76F8\u624B\u306E\u80FD\u529B\u5024 y \u3067\u30ED\u30FC\u30EB\u3092\u884C\u3044\u3001\u6210\u529F\u3057\u305F\u304B\u3069\u3046\u304B\u3092\u8868\u793A\u3057\u307E\u3059\u3002\n" + "  \u4F8B\uFF09MED(5,2)\n" + "\u30FB\u5BFE\u6297\u5224\u5B9A\uFF1ARES(x,y)\n" + "  \u81EA\u5206\u306E\u80FD\u529B\u5024 x \u3068 \u76F8\u624B\u306E\u80FD\u529B\u5024 y \u3067\u76F8\u4E92\u306B\u30ED\u30FC\u30EB\u3057\u3001\u3069\u3061\u3089\u304C\u6210\u529F\u3057\u305F\u304B\u3092\u8868\u793A\u3057\u307E\u3059\u3002\u4E21\u8005\u3068\u3082\u6210\u529F or \u5931\u6557\u306E\u5834\u5408\u306F\u5F15\u304D\u5206\u3051\u3068\u306A\u308A\u307E\u3059\u3002\n" + "  \u4F8B\uFF09RES(6,4)\n" + "\u30FB\u9670\u967D\u30B3\u30DE\u30F3\u30C9 INY\n" + "  \u4F8B\uFF09Hourai : \u967D\uFF08\u5947\u6570\u306E\u65B9\u304C\u591A\u3044\uFF09\n" + "\u30FB\u4E94\u884C\u30B3\u30DE\u30F3\u30C9\uFF1AGOG\n" + "  \u4F8B\uFF09Hourai : \u4E94\u884C\u8868(3) \u2192 \u4E94\u884C\u3010\u571F\u3011\n" + "\u30FB\u516B\u5FB3\u30B3\u30DE\u30F3\u30C9\uFF1AHTK\n" + "  \u4F8B\uFF09Hourai : \u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u7FA9\u3011(\u5947\u6570\u3001\u5947\u6570\u3001\u5076\u6570)\n");
    self.$setPrefixes(["ROL.*", "MED\\(\\d+,\\d+\\)", "RES\\(\\d+,\\d+\\)", "INY.*", "HTK.*", "GOG.*"]);
    
    Opal.def(self, '$rollDiceCommand', $HouraiGakuen_rollDiceCommand$1 = function $$rollDiceCommand(command) {
      var self = this, $case = nil;

      
      $case = command;
      if (/^ROL/i['$===']($case)) {return self.$getRollResult(command)}
      else if (/^MED/i['$===']($case)) {return self.$getMedResult(command)}
      else if (/^RES/i['$===']($case)) {return self.$getResResult(command)}
      else if (/^INY/i['$===']($case)) {return self.$getInnyouResult(command)}
      else if (/^HTK/i['$===']($case)) {return self.$getHattokuResult(command)}
      else if (/^GOG$/i['$===']($case)) {return self.$getGogyouResult(command)};
      return nil;
    }, $HouraiGakuen_rollDiceCommand$1.$$arity = 1);
    Opal.const_set($nesting[0], 'CRITICAL', "\u5927\u6210\u529F");
    Opal.const_set($nesting[0], 'SUCCESS', "\u6210\u529F");
    Opal.const_set($nesting[0], 'FAILURE', "\u5931\u6557");
    Opal.const_set($nesting[0], 'FUMBLE', "\u5927\u5931\u6557");
    
    Opal.def(self, '$getRollResult', $HouraiGakuen_getRollResult$2 = function $$getRollResult(command) {
      var $a, $b, self = this, target = nil, total = nil, diceText = nil, result = nil;

      
      if ($truthy(/rol([-\d]+)/i['$=~'](command))) {
      } else {
        return nil
      };
      target = $$($nesting, 'Regexp').$last_match(1).$to_i();
      $b = self.$roll(3, 6), $a = Opal.to_ary($b), (total = ($a[0] == null ? nil : $a[0])), (diceText = ($a[1] == null ? nil : $a[1])), $b;
      result = self.$getCheckResult(diceText, total, target);
      return "" + "(3d6<=" + (target) + ") \uFF1E \u51FA\u76EE" + (diceText) + "\uFF1D\u5408\u8A08" + (total) + " \uFF1E " + (result);
    }, $HouraiGakuen_getRollResult$2.$$arity = 1);
    
    Opal.def(self, '$getCheckResult', $HouraiGakuen_getCheckResult$3 = function $$getCheckResult(diceText, total, target) {
      var self = this, diceList = nil;

      
      diceList = $send(diceText.$split(","), 'map', [], "to_i".$to_proc()).$sort();
      if ($truthy(self.$isFamble(diceList))) {
        return $$($nesting, 'FUMBLE')};
      if ($truthy(self.$isCritical(diceList))) {
        return $$($nesting, 'CRITICAL')};
      if ($truthy($rb_le(total, target))) {
        return $$($nesting, 'SUCCESS')};
      return $$($nesting, 'FAILURE');
    }, $HouraiGakuen_getCheckResult$3.$$arity = 3);
    
    Opal.def(self, '$isFamble', $HouraiGakuen_isFamble$4 = function $$isFamble(diceList) {
      var self = this;

      return diceList['$===']([6, 6, 6])
    }, $HouraiGakuen_isFamble$4.$$arity = 1);
    
    Opal.def(self, '$isCritical', $HouraiGakuen_isCritical$5 = function $$isCritical(diceList) {
      var self = this;

      return diceList['$===']([1, 2, 3])
    }, $HouraiGakuen_isCritical$5.$$arity = 1);
    
    Opal.def(self, '$getMedResult', $HouraiGakuen_getMedResult$6 = function $$getMedResult(command) {
      var $a, $b, self = this, yourValue = nil, enemyValue = nil, target = nil, total = nil, diceText = nil, result = nil;

      
      if ($truthy(/med\((\d+),(\d+)\)/i['$=~'](command))) {
      } else {
        return nil
      };
      yourValue = $$($nesting, 'Regexp').$last_match(1).$to_i();
      enemyValue = $$($nesting, 'Regexp').$last_match(2).$to_i();
      target = self.$getTargetFromValue(yourValue, enemyValue);
      $b = self.$roll(3, 6), $a = Opal.to_ary($b), (total = ($a[0] == null ? nil : $a[0])), (diceText = ($a[1] == null ? nil : $a[1])), $b;
      result = self.$getCheckResult(diceText, total, target);
      return "" + "(\u3042\u306A\u305F\u306E\u5024" + (yourValue) + "\u3001\u76F8\u624B\u306E\u5024" + (enemyValue) + "\u30013d6<=" + (target) + ") \uFF1E \u51FA\u76EE" + (diceText) + "\uFF1D\u5408\u8A08" + (total) + " \uFF1E " + (result);
    }, $HouraiGakuen_getMedResult$6.$$arity = 1);
    
    Opal.def(self, '$getTargetFromValue', $HouraiGakuen_getTargetFromValue$7 = function $$getTargetFromValue(yourValue, enemyValue) {
      var self = this;

      return $rb_plus(yourValue, $rb_minus(10, enemyValue))
    }, $HouraiGakuen_getTargetFromValue$7.$$arity = 2);
    
    Opal.def(self, '$getResResult', $HouraiGakuen_getResResult$8 = function $$getResResult(command) {
      var $a, $b, self = this, yourValue = nil, enemyValue = nil, yourTarget = nil, enemyTarget = nil, yourTotal = nil, yourDiceText = nil, enemyTotal = nil, enemyDiceText = nil, yourResult = nil, enemyResult = nil, result = nil;

      
      if ($truthy(/res\((\d+),(\d+)\)/i['$=~'](command))) {
      } else {
        return nil
      };
      yourValue = $$($nesting, 'Regexp').$last_match(1).$to_i();
      enemyValue = $$($nesting, 'Regexp').$last_match(2).$to_i();
      yourTarget = self.$getTargetFromValue(yourValue, enemyValue);
      enemyTarget = self.$getTargetFromValue(enemyValue, yourValue);
      $b = self.$roll(3, 6), $a = Opal.to_ary($b), (yourTotal = ($a[0] == null ? nil : $a[0])), (yourDiceText = ($a[1] == null ? nil : $a[1])), $b;
      $b = self.$roll(3, 6), $a = Opal.to_ary($b), (enemyTotal = ($a[0] == null ? nil : $a[0])), (enemyDiceText = ($a[1] == null ? nil : $a[1])), $b;
      yourResult = self.$getCheckResult(yourDiceText, yourTotal, yourTarget);
      enemyResult = self.$getCheckResult(enemyDiceText, enemyTotal, enemyTarget);
      result = self.$getResistCheckResult(yourResult, enemyResult);
      return "" + "\u3042\u306A\u305F\u306E\u5024" + (yourValue) + "\u3001\u76F8\u624B\u306E\u5024" + (enemyValue) + "\n" + "(\u3042\u306A\u305F\u306E\u30ED\u30FC\u30EB 3d6<=" + (yourTarget) + ") \uFF1E " + (yourDiceText) + "=" + (yourTotal) + " \uFF1E " + (yourResult) + "\n" + "(\u76F8\u624B\u306E\u30ED\u30FC\u30EB 3d6<=" + (enemyTarget) + ") \uFF1E " + (enemyDiceText) + "=" + (enemyTotal) + " \uFF1E " + (enemyResult) + "\n" + "\uFF1E" + (result);
    }, $HouraiGakuen_getResResult$8.$$arity = 1);
    
    Opal.def(self, '$getResistCheckResult', $HouraiGakuen_getResistCheckResult$9 = function $$getResistCheckResult(yourResult, enemyResult) {
      var self = this, yourRank = nil, enemyRank = nil;

      
      yourRank = self.$getResultRank(yourResult);
      enemyRank = self.$getResultRank(enemyResult);
      if ($truthy($rb_gt(yourRank, enemyRank))) {
        return "\u3042\u306A\u305F\u304C\u52DD\u5229"};
      if ($truthy($rb_lt(yourRank, enemyRank))) {
        return "\u76F8\u624B\u304C\u52DD\u5229"};
      return "\u5F15\u304D\u5206\u3051";
    }, $HouraiGakuen_getResistCheckResult$9.$$arity = 2);
    
    Opal.def(self, '$getResultRank', $HouraiGakuen_getResultRank$10 = function $$getResultRank(result) {
      var self = this, ranks = nil;

      
      ranks = [$$($nesting, 'FUMBLE'), $$($nesting, 'FAILURE'), $$($nesting, 'SUCCESS'), $$($nesting, 'CRITICAL')];
      return ranks.$index(result);
    }, $HouraiGakuen_getResultRank$10.$$arity = 1);
    
    Opal.def(self, '$getInnyouResult', $HouraiGakuen_getInnyouResult$11 = function $$getInnyouResult(_command) {
      var $$12, self = this, oddCount = nil, evenCount = nil;

      
      oddCount = 0;
      evenCount = 0;
      $send((3), 'times', [], ($$12 = function(){var self = $$12.$$s || this, $a, $b, dice = nil;

      
        $b = self.$roll(1, 6), $a = Opal.to_ary($b), (dice = ($a[0] == null ? nil : $a[0])), $b;
        if ($truthy(dice['$even?']())) {
          return (evenCount = $rb_plus(evenCount, 1))
        } else {
          return (oddCount = $rb_plus(oddCount, 1))
        };}, $$12.$$s = self, $$12.$$arity = 0, $$12));
      if ($truthy($rb_lt(evenCount, oddCount))) {
        return "\u967D\uFF08\u5947\u6570\u306E\u65B9\u304C\u591A\u3044\uFF09"
      } else {
        return "\u9670\uFF08\u5076\u6570\u306E\u65B9\u304C\u591A\u3044\uFF09"
      };
    }, $HouraiGakuen_getInnyouResult$11.$$arity = 1);
    
    Opal.def(self, '$getHattokuResult', $HouraiGakuen_getHattokuResult$13 = function $$getHattokuResult(_command) {
      var $$14, self = this, oddEvenList = nil, oddEvenText = nil, $case = nil;

      
      oddEvenList = [];
      $send((3), 'times', [], ($$14 = function(){var self = $$14.$$s || this;

      return oddEvenList['$<<'](self.$getOddEven())}, $$14.$$s = self, $$14.$$arity = 0, $$14));
      oddEvenText = oddEvenList.$join("\u3001");
      return (function() {$case = oddEvenText;
      if ("\u5947\u6570\u3001\u5947\u6570\u3001\u5947\u6570"['$===']($case)) {return "" + "\u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u4EC1\u3011(" + (oddEvenText) + ")"}
      else if ("\u5947\u6570\u3001\u5947\u6570\u3001\u5076\u6570"['$===']($case)) {return "" + "\u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u7FA9\u3011(" + (oddEvenText) + ")"}
      else if ("\u5947\u6570\u3001\u5076\u6570\u3001\u5947\u6570"['$===']($case)) {return "" + "\u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u793C\u3011(" + (oddEvenText) + ")"}
      else if ("\u5947\u6570\u3001\u5076\u6570\u3001\u5076\u6570"['$===']($case)) {return "" + "\u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u667A\u3011(" + (oddEvenText) + ")"}
      else if ("\u5076\u6570\u3001\u5947\u6570\u3001\u5947\u6570"['$===']($case)) {return "" + "\u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u5FE0\u3011(" + (oddEvenText) + ")"}
      else if ("\u5076\u6570\u3001\u5947\u6570\u3001\u5076\u6570"['$===']($case)) {return "" + "\u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u4FE1\u3011(" + (oddEvenText) + ")"}
      else if ("\u5076\u6570\u3001\u5076\u6570\u3001\u5947\u6570"['$===']($case)) {return "" + "\u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u5B5D\u3011(" + (oddEvenText) + ")"}
      else if ("\u5076\u6570\u3001\u5076\u6570\u3001\u5076\u6570"['$===']($case)) {return "" + "\u4EC1\u7FA9\u516B\u5FB3\u306F\u3001\u3010\u608C\u3011(" + (oddEvenText) + ")"}
      else {return "\u7570\u5E38\u7D42\u4E86"}})();
    }, $HouraiGakuen_getHattokuResult$13.$$arity = 1);
    
    Opal.def(self, '$getOddEven', $HouraiGakuen_getOddEven$15 = function $$getOddEven() {
      var $a, $b, self = this, dice = nil;

      
      $b = self.$roll(1, 6), $a = Opal.to_ary($b), (dice = ($a[0] == null ? nil : $a[0])), $b;
      if ($truthy(dice['$even?']())) {
        return "\u5076\u6570"};
      return "\u5947\u6570";
    }, $HouraiGakuen_getOddEven$15.$$arity = 0);
    
    Opal.def(self, '$getGogyouResult', $HouraiGakuen_getGogyouResult$16 = function $$getGogyouResult(_command) {
      var $a, $b, self = this, type = nil, table = nil, text = nil, number = nil, output = nil;

      
      type = "\u4E94\u884C\u8868";
      table = self.$getGogyouTable();
      $b = self.$get_table_by_1d6(table), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b;
      output = "" + (type) + "(" + (number) + ") \uFF1E " + (text);
      return output;
    }, $HouraiGakuen_getGogyouResult$16.$$arity = 1);
    return (Opal.def(self, '$getGogyouTable', $HouraiGakuen_getGogyouTable$17 = function $$getGogyouTable() {
      var self = this, table = nil;

      
      table = ["\u4E94\u884C\u3010\u6728\u3011", "\u4E94\u884C\u3010\u706B\u3011", "\u4E94\u884C\u3010\u571F\u3011", "\u4E94\u884C\u3010\u91D1\u3011", "\u4E94\u884C\u3010\u6C34\u3011", "\u4E94\u884C\u306F\u3010\u4EFB\u610F\u9078\u629E\u3011"];
      return table;
    }, $HouraiGakuen_getGogyouTable$17.$$arity = 0), nil) && 'getGogyouTable';
  })($nesting[0], $$($nesting, 'DiceBot'), $nesting)
})(Opal);
